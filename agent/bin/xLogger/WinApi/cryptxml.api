[CallingConvention]
@=STDCALL
[CryptXmlCreateReference]
1=HCRYPTXML hCryptXml
2=DWORD dwFlags
3=LPCWSTR wszId
4=LPCWSTR wszURI
5=LPCWSTR wszType
6=CRYPT_XML_ALGORITHM* pDigestMethod
7=ULONG cTransform
8=CRYPT_XML_ALGORITHM* rgTransform
9=HCRYPTXML* phReference
ParamCount=9
Header=cryptxml.h.api;
[CryptXmlAddObject]
1=HCRYPTXML hSignatureOrObject
2=DWORD dwFlags
3=CRYPT_XML_PROPERTY* rgProperty
4=ULONG cProperty
5=PCRYPT_XML_BLOB pEncoded
6=CRYPT_XML_OBJECT** ppObject
ParamCount=6
Header=cryptxml.h.api;
[CryptXmlClose]
1=HCRYPTXML hCryptXml
ParamCount=1
Header=cryptxml.h.api;
[CryptXmlDigestReference]
1=HCRYPTXML hReference
2=DWORD dwFlags
3=CRYPT_XML_DATA_PROVIDER* pDataProviderIn
ParamCount=3
Header=cryptxml.h.api;
[CryptXmlEncode]
1=HCRYPTXML hCryptXml
2=[CRYPT_XML_CHARSET] dwCharset
3=CRYPT_XML_PROPERTY* rgProperty
4=ULONG cProperty
5=void* pvCallbackState
6=PFN_CRYPT_XML_WRITE_CALLBACK pfnWrite
ParamCount=6
Header=cryptxml.h.api;
[CryptXmlGetAlgorithmInfo]
1=CRYPT_XML_ALGORITHM* pXmlAlgorithm
2=DWORD dwFlags
3=CRYPT_XML_ALGORITHM_INFO** ppAlgInfo
ParamCount=3
Header=cryptxml.h.api;
[CryptXmlGetDocContext]
1=HCRYPTXML hCryptXml
2=CRYPT_XML_DOC_CTXT** ppStruct
ParamCount=2
Header=cryptxml.h.api;
[CryptXmlGetReference]
1=HCRYPTXML HCRYPTXML
2=CRYPT_XML_REFERENCE** ppStruct
ParamCount=2
Header=cryptxml.h.api;
[CryptXmlGetSignature]
1=HCRYPTXML hCryptXml
2=CRYPT_XML_SIGNATURE** ppStruct
ParamCount=2
Header=cryptxml.h.api;
[CryptXmlGetStatus]
1=HCRYPTXML hCryptXml
2=CRYPT_XML_STATUS* pStatus
ParamCount=2
Header=cryptxml.h.api;
[CryptXmlGetTransforms]
1=CRYPT_XML_TRANSFORM_CHAIN_CONFIG** ppConfig
ParamCount=1
Header=cryptxml.h.api;
[CryptXmlImportPublicKey]
1=DWORD dwFlags
2=CRYPT_XML_KEY_VALUE* pKeyValue
3=BCRYPT_KEY_HANDLE* phKey
ParamCount=3
Header=cryptxml.h.api;cryptography.h.api;
[CryptXmlOpenToEncode]
1=CRYPT_XML_TRANSFORM_CHAIN_CONFIG* pConfig
2=DWORD dwFlags
3=LPCWSTR wszId
4=CRYPT_XML_PROPERTY* rgProperty
5=ULONG cProperty
6=CRYPT_XML_BLOB* pEncoded
7=HCRYPTXML* phSignature
ParamCount=7
Header=cryptxml.h.api;
[CryptXmlOpenToDecode]
1=CRYPT_XML_TRANSFORM_CHAIN_CONFIG* pConfig
2=DWORD dwFlags
3=CRYPT_XML_PROPERTY* rgProperty
4=ULONG cProperty
5=CRYPT_XML_BLOB* pEncoded
6=HCRYPTXML phCryptXml
ParamCount=6
Header=cryptxml.h.api;
[CryptXmlSetHMACSecret]
1=HCRYPTXML hSignature
2=const BYTE* pbSecret
3=ULONG cbSecret
ParamCount=3
Header=cryptxml.h.api;
[CryptXmlVerifySignature]
1=HCRYPTXML hSignature
2=BCRYPT_KEY_HANDLE hKey
3=DWORD dwFlags
ParamCount=3
Header=cryptxml.h.api;cryptography.h.api;
[CryptXmlSign]
1=HCRYPTXML hSignature
2=HCRYPTPROV_OR_NCRYPT_KEY_HANDLE hKey
3=DWORD dwKeySpec
4=DWORD dwFlags
5=[CRYPT_XML_KEYINFO_SPEC] dwKeyInfoSpec
6=const void* pvKeyInfoSpec
7=CRYPT_XML_ALGORITHM* pSignatureMethod
8=CRYPT_XML_ALGORITHM* pCanonicalization
ParamCount=8
Header=cryptxml.h.api;cryptography.h.api;