[CallingConvention]
@=STDCALL
[RegCloseKey]
1=[HKEY] hKey
ParamCount=1
Header=registry.h.api;
[RegConnectRegistry]
1=LPCTSTR lpMachineName
2=[HKEY] hKey
3=PHKEY phkResult
ParamCount=3
Header=registry.h.api;
[RegCopyTree]
1=[HKEY] hKeySrc
2=LPCTSTR lpSubKey
3=[HKEY] hKeyDest
ParamCount=3
Header=registry.h.api;
[RegCreateKeyEx]
1=[HKEY] hKey
2=LPCTSTR lpSubKey
3=DWORD Reserved
4=LPTSTR lpClass
5=[RegOptions] dwOptions
6=[REGSAM] samDesired
7=LPSECURITY_ATTRIBUTES lpSecurityAttributes
8=PHKEY phkResult
9=RegDisposition* lpdwDisposition
ParamCount=9
Header=registry.h.api;security.h.api;
[RegCreateKeyTransacted]
1=[HKEY] hKey
2=LPCTSTR lpSubKey
3=DWORD Reserved
4=LPTSTR lpClass
5=[RegOptions] dwOptions
6=[REGSAM] samDesired
7=LPSECURITY_ATTRIBUTES lpSecurityAttributes
8=PHKEY phkResult
9=RegDisposition* lpdwDisposition
10=HANDLE hTransaction
11=PVOID pExtendedParemeter
ParamCount=11
Header=registry.h.api;security.h.api;windows.h.api;
[RegDeleteKey]
1=[HKEY] hKey
2=LPCTSTR lpSubKey
ParamCount=2
Header=registry.h.api;
[RegDeleteKeyEx]
1=[HKEY] hKey
2=LPCTSTR lpSubKey
3=[REGSAM] samDesired
4=DWORD Reserved
ParamCount=4
Header=registry.h.api;
[RegDeleteKeyTransacted]
1=[HKEY] hKey
2=LPCTSTR lpSubKey
3=[REGSAM] samDesired
4=DWORD Reserved
5=HANDLE hTransaction
6=PVOID pExtendedParameter
ParamCount=6
Header=registry.h.api;windows.h.api;
[RegDeleteKeyValue]
1=[HKEY] hKey
2=LPCTSTR lpSubKey
3=LPCTSTR lpValueName
ParamCount=3
Header=registry.h.api;
[RegDeleteTree]
1=[HKEY] hKey
2=LPCTSTR lpSubKey
ParamCount=2
Header=registry.h.api;
[RegDeleteValue]
1=[HKEY] hKey
2=LPCTSTR lpValueName
ParamCount=2
Header=registry.h.api;
[RegDisablePredefinedCache]
ParamCount=0
[RegDisablePredefinedCacheEx]
ParamCount=0
[RegDisableReflectionKey]
1=[HKEY] hBase
ParamCount=1
Header=registry.h.api;
[RegEnableReflectionKey]
1=[HKEY] hBase
ParamCount=1
Header=registry.h.api;
[RegEnumKeyEx]
1=[HKEY] hKey
2=DWORD dwIndex
3=LPTSTR lpName
4=LPDWORD lpcName
5=LPDWORD lpReserved
6=LPTSTR lpClass
7=LPDWORD lpcClass
8=PFILETIME lpftLastWriteTime
ParamCount=8
Header=registry.h.api;windows.h.api;
[RegEnumValue]
1=[HKEY] hKey
2=DWORD dwIndex
3=LPTSTR lpValueName
4=LPDWORD lpcchValueName
5=LPDWORD lpReserved
6=RegType* lpType
7=LPBYTE lpData
8=LPDWORD lpcbData
ParamCount=8
Header=registry.h.api;
[RegFlushKey]
1=[HKEY] hKey
ParamCount=1
Header=registry.h.api;
[RegGetValue]
1=[HKEY] hkey
2=LPCTSTR lpSubKey
3=LPCTSTR lpValue
4=DWORD dwFlags
5=RegType* pdwType
6=PVOID pvData
7=LPDWORD pcbData
ParamCount=7
Header=registry.h.api;
[RegLoadAppKey]
1=LPCTSTR lpFile
2=PHKEY phkResult
3=[REGSAM] samDesired
4=[RegLoadAppKey_Options] dwOptions
5=DWORD Reserved
ParamCount=5
Header=advapi32.h.api;registry.h.api;
[RegLoadKey]
1=[HKEY] hKey
2=LPCTSTR lpSubKey
3=LPCTSTR lpFile
ParamCount=3
Header=registry.h.api;
[RegLoadMUIString]
1=[HKEY] hKey
2=LPCTSTR pszValue
3=LPTSTR pszOutBuf
4=DWORD cbOutBuf
5=LPDWORD pcbData
6=[RegMuiFlags] Flags
7=LPCTSTR pszDirectory
ParamCount=7
Header=registry.h.api;
[RegNotifyChangeKeyValue]
1=[HKEY] hKey
2=BOOL bWatchSubtree
3=[RegNotifyFlags] dwNotifyFilter
4=HANDLE hEvent
5=BOOL fAsynchronous
ParamCount=5
Header=registry.h.api;windows.h.api;
[RegOpenCurrentUser]
1=[REGSAM] samDesired
2=PHKEY phkResult
ParamCount=2
Header=registry.h.api;
[RegOpenKeyEx]
1=[HKEY] hKey
2=LPCTSTR lpSubKey
3=DWORD ulOptions
4=[REGSAM] samDesired
5=PHKEY phkResult
ParamCount=5
Header=registry.h.api;
[RegOpenKeyTransacted]
1=[HKEY] hKey
2=LPCTSTR lpSubKey
3=DWORD ulOptions
4=[REGSAM] samDesired
5=PHKEY phkResult
6=HANDLE hTransaction
7=PVOID pExtendedParameter
ParamCount=7
Header=registry.h.api;windows.h.api;
[RegOpenUserClassesRoot]
1=HANDLE hToken
2=DWORD dwOptions
3=[REGSAM] samDesired
4=PHKEY phkResult
ParamCount=4
Header=registry.h.api;windows.h.api;
[RegOverridePredefKey]
1=[HKEY] hKey
2=[HKEY] hNewHKey
ParamCount=2
Header=registry.h.api;
[RegQueryInfoKey]
1=[HKEY] hKey
2=LPTSTR lpClass
3=LPDWORD lpcClass
4=LPDWORD lpReserved
5=LPDWORD lpcSubKeys
6=LPDWORD lpcMaxSubKeyLen
7=LPDWORD lpcMaxClassLen
8=LPDWORD lpcValues
9=LPDWORD lpcMaxValueNameLen
10=LPDWORD lpcMaxValueLen
11=LPDWORD lpcbSecurityDescriptor
12=PFILETIME lpftLastWriteTime
ParamCount=12
Header=registry.h.api;windows.h.api;
[RegQueryMultipleValues]
1=[HKEY] hKey
2=PVALENT val_list
3=DWORD num_vals
4=LPVOID lpValueBuf
5=LPDWORD ldwTotsize
ParamCount=5
Header=advapi32.h.api;registry.h.api;
[RegQueryReflectionKey]
1=[HKEY] hBase
2=BOOL* bIsReflectionDisabled
ParamCount=2
Header=registry.h.api;
[RegQueryValueEx]
1=[HKEY] hKey
2=LPCTSTR lpValueName
3=LPDWORD lpReserved
4=RegType* lpType
5=LPBYTE lpData
6=LPDWORD lpcbData
ParamCount=6
Header=registry.h.api;
[RegReplaceKey]
1=[HKEY] hKey
2=LPCTSTR lpSubKey
3=LPCTSTR lpNewFile
4=LPCTSTR lpOldFile
ParamCount=4
Header=registry.h.api;
[RegRestoreKey]
1=[HKEY] hKey
2=LPCTSTR lpFile
3=DWORD dwFlags
ParamCount=3
Header=registry.h.api;
[RegSaveKey]
1=[HKEY] hKey
2=LPCTSTR lpFile
3=LPSECURITY_ATTRIBUTES lpSecurityAttributes
ParamCount=3
Header=registry.h.api;security.h.api;
[RegSaveKeyEx]
1=[HKEY] hKey
2=LPCTSTR lpFile
3=LPSECURITY_ATTRIBUTES lpSecurityAttributes
4=DWORD Flags
ParamCount=4
Header=registry.h.api;security.h.api;
[RegSetKeyValue]
1=[HKEY] hKey
2=LPCTSTR lpSubKey
3=LPCTSTR lpValueName
4=[RegType] dwType
5=LPCVOID lpData
6=DWORD cbData
ParamCount=6
Header=registry.h.api;
[RegSetValueEx]
1=[HKEY] hKey
2=LPCTSTR lpValueName
3=DWORD Reserved
4=[RegType] dwType
5=const BYTE* lpData
6=DWORD cbData
ParamCount=6
Header=registry.h.api;
[RegUnLoadKey]
1=[HKEY] hKey
2=LPCTSTR lpSubKey
ParamCount=2
Header=registry.h.api;
[RegCreateKey]
1=[HKEY] hKey
2=LPCTSTR lpSubKey
3=PHKEY phkResult
ParamCount=3
Header=registry.h.api;
[RegEnumKey]
1=[HKEY] hKey
2=DWORD dwIndex
3=LPTSTR lpName
4=DWORD cchName
ParamCount=4
Header=registry.h.api;
[RegOpenKey]
1=[HKEY] hKey
2=LPCTSTR lpSubKey
3=PHKEY phkResult
ParamCount=3
Header=registry.h.api;
[RegQueryValue]
1=[HKEY] hKey
2=LPCTSTR lpSubKey
3=LPTSTR lpValue
4=PLONG lpcbValue
ParamCount=4
Header=registry.h.api;
[RegSetValue]
1=[HKEY] hKey
2=LPCTSTR lpSubKey
3=[RegType] dwType
4=LPCTSTR lpData
5=DWORD cbData
ParamCount=5
Header=registry.h.api;
[AddUsersToEncryptedFile]
1=LPCWSTR lpFileName
2=PENCRYPTION_CERTIFICATE_LIST pUsers
ParamCount=2
Header=advapi32.h.api;
[CloseEncryptedFileRaw]
1=PVOID pvContext
ParamCount=1
[DecryptFile]
1=LPCTSTR lpFileName
2=DWORD dwReserved
ParamCount=2
[DuplicateEncryptionInfoFile]
1=LPCTSTR SrcFileName
2=LPCTSTR DstFileName
3=DWORD dwCreationDistribution
4=DWORD dwAttributes
5=LPSECURITY_ATTRIBUTES lpSecurityAttributes
ParamCount=5
Header=security.h.api;
[EncryptFile]
1=LPCTSTR lpFileName
ParamCount=1
[EncryptionDisable]
1=LPCWSTR DirPath
2=BOOL Disable
ParamCount=2
[FileEncryptionStatus]
1=LPCTSTR lpFileName
2=LPDWORD lpStatus
ParamCount=2
[FreeEncryptionCertificateHashList]
1=PENCRYPTION_CERTIFICATE_HASH_LIST pHashes
ParamCount=1
Header=advapi32.h.api;
[OpenEncryptedFileRaw]
1=LPCTSTR lpFileName
2=ULONG ulFlags
3=PVOID* pvContext
ParamCount=3
[QueryRecoveryAgentsOnEncryptedFile]
1=LPCWSTR lpFileName
2=PENCRYPTION_CERTIFICATE_HASH_LIST* pRecoveryAgents
ParamCount=2
Header=advapi32.h.api;
[QueryUsersOnEncryptedFile]
1=LPCWSTR lpFileName
2=PENCRYPTION_CERTIFICATE_HASH_LIST* pUsers
ParamCount=2
Header=advapi32.h.api;
[ReadEncryptedFileRaw]
1=PFE_EXPORT_FUNC pfExportCallback
2=PVOID pvCallbackContext
3=PVOID pvContext
ParamCount=3
Header=advapi32.h.api;
[RemoveUsersFromEncryptedFile]
1=LPCWSTR lpFileName
2=PENCRYPTION_CERTIFICATE_HASH_LIST pHashes
ParamCount=2
Header=advapi32.h.api;
[SetUserFileEncryptionKey]
1=PENCRYPTION_CERTIFICATE pEncryptionCertificate
ParamCount=1
Header=advapi32.h.api;
[WriteEncryptedFileRaw]
1=PFE_IMPORT_FUNC pfImportCallback
2=PVOID pvCallbackContext
3=PVOID pvContext
ParamCount=3
Header=advapi32.h.api;
[CreateProcessAsUser]
1=HANDLE hToken
2=LPCTSTR lpApplicationName
3=LPTSTR lpCommandLine
4=LPSECURITY_ATTRIBUTES lpProcessAttributes
5=LPSECURITY_ATTRIBUTES lpThreadAttributes
6=BOOL bInheritHandles
7=[CreateProcessFlags] dwCreationFlags
8=LPVOID lpEnvironment
9=LPCTSTR lpCurrentDirectory
10=LPSTARTUPINFO lpStartupInfo
11=LPPROCESS_INFORMATION lpProcessInformation
ParamCount=11
Header=processes.h.api;security.h.api;windows.h.api;
[CreateProcessWithLogonW]
1=LPCWSTR lpUsername
2=LPCWSTR lpDomain
3=LPCWSTR lpPassword
4=[LogonFlags] dwLogonFlags
5=LPCWSTR lpApplicationName
6=LPWSTR lpCommandLine
7=[CreateProcessFlags] dwCreationFlags
8=LPVOID lpEnvironment
9=LPCWSTR lpCurrentDirectory
10=LPSTARTUPINFOW lpStartupInfo
11=LPPROCESS_INFORMATION lpProcessInfo
ParamCount=11
Header=advapi32.h.api;processes.h.api;windows.h.api;
[CreateProcessWithTokenW]
1=HANDLE hToken
2=[LogonFlags] dwLogonFlags
3=LPCWSTR lpApplicationName
4=LPWSTR lpCommandLine
5=[CreateProcessFlags] dwCreationFlags
6=LPVOID lpEnvironment
7=LPCWSTR lpCurrentDirectory
8=LPSTARTUPINFOW lpStartupInfo
9=LPPROCESS_INFORMATION lpProcessInfo
ParamCount=9
Header=advapi32.h.api;processes.h.api;windows.h.api;
[GetLocalManagedApplications]
1=BOOL bUserApps
2=LPDWORD pdwApps
3=PLOCALMANAGEDAPPLICATION* prgLocalApps
ParamCount=3
Header=advapi32.h.api;
[GetManagedApplications]
1=GUID* pCategory
2=DWORD dwQueryFlags
3=DWORD dwInfoLevel
4=LPDWORD pdwApps
5=PMANAGEDAPPLICATION* prgManagedApps
ParamCount=5
Header=advapi32.h.api;windows.h.api;
[GetManagedApplicationCategories]
1=DWORD dwReserved
2=APPCATEGORYINFOLIST* pAppCategory
ParamCount=2
Header=shell.h.api;
[InstallApplication]
1=PINSTALLDATA* pInstallInfo
ParamCount=1
Header=advapi32.h.api;
[UninstallApplication]
1=WCHAR* ProductCode
2=DWORD dwStatus
ParamCount=2
[AbortSystemShutdown]
1=LPTSTR lpMachineName
ParamCount=1
[InitiateShutdown]
1=LPTSTR lpMachineName
2=LPTSTR lpMessage
3=DWORD dwGracePeriod
4=[SHUTDOWN_FLAGS] dwShutdownFlags
5=[SHTDN_REASON] dwReason
ParamCount=5
Header=advapi32.h.api;windows.h.api;
[InitiateSystemShutdown]
1=LPTSTR lpMachineName
2=LPTSTR lpMessage
3=DWORD dwTimeout
4=BOOL bForceAppsClosed
5=BOOL bRebootAfterShutdown
ParamCount=5
[InitiateSystemShutdownEx]
1=LPTSTR lpMachineName
2=LPTSTR lpMessage
3=DWORD dwTimeout
4=BOOL bForceAppsClosed
5=BOOL bRebootAfterShutdown
6=[SHTDN_REASON] dwReason
ParamCount=6
Header=windows.h.api;
[BackupEventLog]
1=HANDLE hEventLog
2=LPCTSTR lpBackupFileName
ParamCount=2
Header=windows.h.api;
[ClearEventLog]
1=HANDLE hEventLog
2=LPCTSTR lpBackupFileName
ParamCount=2
Header=windows.h.api;
[CloseEventLog]
1=HANDLE hEventLog
ParamCount=1
Header=windows.h.api;
[DeregisterEventSource]
1=HANDLE hEventLog
ParamCount=1
Header=windows.h.api;
[GetEventLogInformation]
1=HANDLE hEventLog
2=DWORD dwInfoLevel
3=LPVOID lpBuffer
4=DWORD cbBufSize
5=LPDWORD pcbBytesNeeded
ParamCount=5
Header=windows.h.api;
[GetNumberOfEventLogRecords]
1=HANDLE hEventLog
2=PDWORD NumberOfRecords
ParamCount=2
Header=windows.h.api;
[GetOldestEventLogRecord]
1=HANDLE hEventLog
2=PDWORD OldestRecord
ParamCount=2
Header=windows.h.api;
[NotifyChangeEventLog]
1=HANDLE hEventLog
2=HANDLE hEvent
ParamCount=2
Header=windows.h.api;
[OpenBackupEventLog]
1=LPCTSTR lpUNCServerName
2=LPCTSTR lpFileName
ParamCount=2
[OpenEventLog]
1=LPCTSTR lpUNCServerName
2=LPCTSTR lpSourceName
ParamCount=2
[ReadEventLog]
1=HANDLE hEventLog
2=DWORD dwReadFlags
3=DWORD dwRecordOffset
4=LPVOID lpBuffer
5=DWORD nNumberOfBytesToRead
6=DWORD* pnBytesRead
7=DWORD* pnMinNumberOfBytesNeeded
ParamCount=7
Header=windows.h.api;
[RegisterEventSource]
1=LPCTSTR lpUNCServerName
2=LPCTSTR lpSourceName
ParamCount=2
[ReportEvent]
1=HANDLE hEventLog
2=[EventLogType] wType
3=WORD wCategory
4=DWORD dwEventID
5=PSID lpUserSid
6=WORD wNumStrings
7=DWORD dwDataSize
8=LPCTSTR* lpStrings
9=LPVOID lpRawData
ParamCount=9
Header=events.h.api;windows.h.api;
[PerfCreateInstance]
1=HANDLE hProvider
2=LPCGUID CounterSetGuid
3=LPCWSTR szInstanceName
4=ULONG dwInstance
ParamCount=4
Header=windows.h.api;
[PerfDecrementULongCounterValue]
1=HANDLE hProvider
2=PPERF_COUNTERSET_INSTANCE pInstance
3=ULONG CounterId
4=ULONG lValue
ParamCount=4
Header=advapi32.h.api;windows.h.api;
[PerfDecrementULongLongCounterValue]
1=HANDLE hProvider
2=PPERF_COUNTERSET_INSTANCE pInstance
3=ULONG CounterId
4=ULONGLONG llValue
ParamCount=4
Header=advapi32.h.api;windows.h.api;
[PerfDeleteInstance]
1=HANDLE hProvider
2=PPERF_COUNTERSET_INSTANCE InstanceBlock
ParamCount=2
Header=advapi32.h.api;windows.h.api;
[PerfIncrementULongCounterValue]
1=HANDLE hProvider
2=PPERF_COUNTERSET_INSTANCE pInstance
3=ULONG CounterId
4=ULONG lValue
ParamCount=4
Header=advapi32.h.api;windows.h.api;
[PerfIncrementULongLongCounterValue]
1=HANDLE hProvider
2=PPERF_COUNTERSET_INSTANCE pInstance
3=ULONG CounterId
4=ULONGLONG llValue
ParamCount=4
Header=advapi32.h.api;windows.h.api;
[PerfQueryInstance]
1=HANDLE hProvider
2=LPCGUID CounterSetGuid
3=LPCWSTR szInstance
4=ULONG dwInstance
ParamCount=4
Header=windows.h.api;
[PerfSetCounterSetInfo]
1=HANDLE hProvider
2=PPERF_COUNTERSET_INFO pTemplate
3=ULONG dwTemplateSize
ParamCount=3
Header=advapi32.h.api;windows.h.api;
[PerfSetULongCounterValue]
1=HANDLE hProvider
2=PPERF_COUNTERSET_INSTANCE pInstance
3=ULONG CounterId
4=ULONG lValue
ParamCount=4
Header=advapi32.h.api;windows.h.api;
[PerfSetULongLongCounterValue]
1=HANDLE hProvider
2=PPERF_COUNTERSET_INSTANCE pInstance
3=ULONG CounterId
4=ULONGLONG llValue
ParamCount=4
Header=advapi32.h.api;windows.h.api;
[PerfSetCounterRefValue]
1=HANDLE hProvider
2=PPERF_COUNTERSET_INSTANCE pInstance
3=ULONG CounterId
4=PVOID lpAddr
ParamCount=4
Header=advapi32.h.api;windows.h.api;
[PerfStartProvider]
1=LPGUID ProviderGuid
2=PERFLIBREQUEST ControlCallback
3=HANDLE* phProvider
ParamCount=3
Header=advapi32.h.api;windows.h.api;
[PerfStartProviderEx]
1=LPGUID ProviderGuid
2=PPERF_PROVIDER_CONTEXT ProviderContext
3=HANDLE* phProvider
ParamCount=3
Header=advapi32.h.api;windows.h.api;
[PerfStopProvider]
1=HANDLE hProvider
ParamCount=1
Header=windows.h.api;
[RegisterServiceCtrlHandler]
1=LPCTSTR lpServiceName
2=LPHANDLER_FUNCTION lpHandlerProc
ParamCount=2
Header=advapi32.h.api;
[RegisterServiceCtrlHandlerEx]
1=LPCTSTR lpServiceName
2=LPHANDLER_FUNCTION_EX lpHandlerProc
3=LPVOID lpContext
ParamCount=3
Header=advapi32.h.api;
[SetServiceBits]
1=SERVICE_STATUS_HANDLE hServiceStatus
2=DWORD dwServiceBits
3=BOOL bSetBitsOn
4=BOOL bUpdateImmediately
ParamCount=4
Header=services.h.api;
[SetServiceStatus]
1=SERVICE_STATUS_HANDLE hServiceStatus
2=LPSERVICE_STATUS lpServiceStatus
ParamCount=2
Header=services.h.api;
[StartServiceCtrlDispatcher]
1=SERVICE_TABLE_ENTRY* lpServiceTable
ParamCount=1
Header=services.h.api;
[ChangeServiceConfig]
1=SC_HANDLE hService
2=[ServiceType] dwServiceType
3=[ServiceStartType] dwStartType
4=[ServiceErrorControl] dwErrorControl
5=LPCTSTR lpBinaryPathName
6=LPCTSTR lpLoadOrderGroup
7=LPDWORD lpdwTagId
8=LPCTSTR lpDependencies
9=LPCTSTR lpServiceStartName
10=LPCTSTR lpPassword
11=LPCTSTR lpDisplayName
ParamCount=11
Header=services.h.api;
[ChangeServiceConfig2]
1=SC_HANDLE hService
2=[ServiceInfoLevel] dwInfoLevel
3=LPVOID lpInfo
ParamCount=3
Header=services.h.api;
[CloseServiceHandle]
1=SC_HANDLE hSCObject
ParamCount=1
Header=services.h.api;
[ControlService]
1=SC_HANDLE hService
2=[ServiceControl] dwControl
3=LPSERVICE_STATUS lpServiceStatus
ParamCount=3
Header=services.h.api;
[ControlServiceEx]
1=SC_HANDLE hService
2=DWORD dwControl
3=DWORD dwInfoLevel
4=PVOID pControlParams
ParamCount=4
Header=services.h.api;
[CreateService]
1=SC_HANDLE hSCManager
2=LPCTSTR lpServiceName
3=LPCTSTR lpDisplayName
4=[ServiceAccess] dwDesiredAccess
5=[ServiceType] dwServiceType
6=[ServiceStartType] dwStartType
7=[ServiceErrorControl] dwErrorControl
8=LPCTSTR lpBinaryPathName
9=LPCTSTR lpLoadOrderGroup
10=LPDWORD lpdwTagId
11=LPCTSTR lpDependencies
12=LPCTSTR lpServiceStartName
13=LPCTSTR lpPassword
ParamCount=13
Header=services.h.api;
[DeleteService]
1=SC_HANDLE hService
ParamCount=1
Header=services.h.api;
[EnumDependentServices]
1=SC_HANDLE hService
2=[ServiceState] dwServiceState
3=LPENUM_SERVICE_STATUS lpServices
4=DWORD cbBufSize
5=LPDWORD pcbBytesNeeded
6=LPDWORD lpServicesReturned
ParamCount=6
Header=services.h.api;
[EnumServicesStatusEx]
1=SC_HANDLE hSCManager
2=[SC_ENUM_TYPE] InfoLevel
3=[ServiceType] dwServiceType
4=[ServiceState] dwServiceState
5=LPBYTE lpServices
6=DWORD cbBufSize
7=LPDWORD pcbBytesNeeded
8=LPDWORD lpServicesReturned
9=LPDWORD lpResumeHandle
10=LPCTSTR pszGroupName
ParamCount=10
Header=advapi32.h.api;services.h.api;
[GetServiceDisplayName]
1=SC_HANDLE hSCManager
2=LPCTSTR lpServiceName
3=LPTSTR lpDisplayName
4=LPDWORD lpcchBuffer
ParamCount=4
Header=services.h.api;
[GetServiceKeyName]
1=SC_HANDLE hSCManager
2=LPCTSTR lpDisplayName
3=LPTSTR lpServiceName
4=LPDWORD lpcchBuffer
ParamCount=4
Header=services.h.api;
[NotifyBootConfigStatus]
1=BOOL BootAcceptable
ParamCount=1
[NotifyServiceStatusChange]
1=SC_HANDLE hService
2=[ServiceNotifyMask] dwNotifyMask
3=PSERVICE_NOTIFYA pNotifyBuffer
ParamCount=3
Header=services.h.api;
[OpenSCManager]
1=LPCTSTR lpMachineName
2=LPCTSTR lpDatabaseName
3=[SCManagerAccess] dwDesiredAccess
ParamCount=3
Header=services.h.api;
[OpenService]
1=SC_HANDLE hSCManager
2=LPCTSTR lpServiceName
3=[ServiceAccess] dwDesiredAccess
ParamCount=3
Header=services.h.api;
[QueryServiceConfig]
1=SC_HANDLE hService
2=LPQUERY_SERVICE_CONFIG lpServiceConfig
3=DWORD cbBufSize
4=LPDWORD pcbBytesNeeded
ParamCount=4
Header=services.h.api;
[QueryServiceConfig2]
1=SC_HANDLE hService
2=[ServiceInfoLevel] dwInfoLevel
3=LPBYTE lpBuffer
4=DWORD cbBufSize
5=LPDWORD pcbBytesNeeded
ParamCount=5
Header=services.h.api;
[QueryServiceDynamicInformation]
1=SERVICE_STATUS_HANDLE hServiceStatus
2=DWORD dwInfoLevel
3=PVOID* ppDynamicInfo
ParamCount=3
Header=services.h.api;
[QueryServiceStatus]
1=SC_HANDLE hService
2=LPSERVICE_STATUS lpServiceStatus
ParamCount=2
Header=services.h.api;
[QueryServiceStatusEx]
1=SC_HANDLE hService
2=[SC_STATUS_TYPE] InfoLevel
3=LPBYTE lpBuffer
4=DWORD cbBufSize
5=LPDWORD pcbBytesNeeded
ParamCount=5
Header=services.h.api;
[StartService]
1=SC_HANDLE hService
2=DWORD dwNumServiceArgs
3=LPCTSTR* lpServiceArgVectors
ParamCount=3
Header=services.h.api;
[EnumServicesStatus]
1=SC_HANDLE hSCManager
2=[ServiceType] dwServiceType
3=[ServiceState] dwServiceState
4=LPENUM_SERVICE_STATUS lpServices
5=DWORD cbBufSize
6=LPDWORD pcbBytesNeeded
7=LPDWORD lpServicesReturned
8=LPDWORD lpResumeHandle
ParamCount=8
Header=services.h.api;
[LockServiceDatabase]
1=SC_HANDLE hSCManager
ParamCount=1
Header=services.h.api;
[QueryServiceLockStatus]
1=SC_HANDLE hSCManager
2=LPQUERY_SERVICE_LOCK_STATUS lpLockStatus
3=DWORD cbBufSize
4=LPDWORD pcbBytesNeeded
ParamCount=4
Header=services.h.api;
[UnlockServiceDatabase]
1=SC_LOCK ScLock
ParamCount=1
Header=services.h.api;
[GetCurrentHwProfile]
1=LPHW_PROFILE_INFO lpHwProfileInfo
ParamCount=1
Header=advapi32.h.api;
[GetUserName]
1=LPTSTR lpBuffer
2=LPDWORD lpnSize
ParamCount=2
[IsTextUnicode]
1=const VOID* lpv
2=int iSize
3=IsTextUnicodeFlags* lpiResult
ParamCount=3
Header=windows.h.api;
[CryptAcquireContext]
1=HCRYPTPROV* phProv
2=LPCTSTR pszContainer
3=LPCTSTR pszProvider
4=[CryptProv] dwProvType
5=[CryptAcquireContextFlags] dwFlags
ParamCount=5
Header=cryptography.h.api;
[CryptContextAddRef]
1=HCRYPTPROV hProv
2=DWORD* pdwReserved
3=DWORD dwFlags
ParamCount=3
Header=cryptography.h.api;
[CryptEnumProviders]
1=DWORD dwIndex
2=DWORD* pdwReserved
3=DWORD dwFlags
4=CryptProv* pdwProvType
5=LPTSTR pszProvName
6=DWORD* pcbProvName
ParamCount=6
Header=cryptography.h.api;
[CryptEnumProviderTypes]
1=DWORD dwIndex
2=DWORD* pdwReserved
3=DWORD dwFlags
4=CryptProv* pdwProvType
5=LPTSTR pszTypeName
6=DWORD* pcbTypeName
ParamCount=6
Header=cryptography.h.api;
[CryptGetDefaultProvider]
1=[CryptProv] dwProvType
2=DWORD* pdwReserved
3=DWORD dwFlags
4=LPTSTR pszProvName
5=DWORD* pcbProvName
ParamCount=5
Header=cryptography.h.api;
[CryptGetProvParam]
1=HCRYPTPROV hProv
2=[CryptGetProvParam] dwParam
3=BYTE* pbData
4=DWORD* pdwDataLen
5=DWORD dwFlags
ParamCount=5
Header=cryptography.h.api;
[CryptReleaseContext]
1=HCRYPTPROV hProv
2=DWORD dwFlags
ParamCount=2
Header=cryptography.h.api;
[CryptSetProvider]
1=LPCTSTR pszProvName
2=[CryptProv] dwProvType
ParamCount=2
Header=cryptography.h.api;
[CryptSetProviderEx]
1=LPCTSTR pszProvName
2=[CryptProv] dwProvType
3=DWORD* pdwReserved
4=DWORD dwFlags
ParamCount=4
Header=cryptography.h.api;
[CryptSetProvParam]
1=HCRYPTPROV hProv
2=[CryptSetProvParam] dwParam
3=const BYTE* pbData
4=DWORD dwFlags
ParamCount=4
Header=cryptography.h.api;
[CryptDeriveKey]
1=HCRYPTPROV hProv
2=[ALG_ID] Algid
3=HCRYPTHASH hBaseData
4=DWORD dwFlags
5=HCRYPTKEY* phKey
ParamCount=5
Header=cryptography.h.api;
[CryptDestroyKey]
1=HCRYPTKEY hKey
ParamCount=1
Header=cryptography.h.api;
[CryptDuplicateKey]
1=HCRYPTKEY hKey
2=DWORD* pdwReserved
3=DWORD dwFlags
4=HCRYPTKEY* phKey
ParamCount=4
Header=cryptography.h.api;
[CryptExportKey]
1=HCRYPTKEY hKey
2=HCRYPTKEY hExpKey
3=[CryptBlobType] dwBlobType
4=[CryptExportKeyFlags] dwFlags
5=BYTE* pbData
6=DWORD* pdwDataLen
ParamCount=6
Header=cryptography.h.api;
[CryptGenKey]
1=HCRYPTPROV hProv
2=[ALG_ID] Algid
3=DWORD dwFlags
4=HCRYPTKEY* phKey
ParamCount=4
Header=cryptography.h.api;
[CryptGenRandom]
1=HCRYPTPROV hProv
2=DWORD dwLen
3=BYTE* pbBuffer
ParamCount=3
Header=cryptography.h.api;
[CryptGetKeyParam]
1=HCRYPTKEY hKey
2=[CryptKeyParam] dwParam
3=BYTE* pbData
4=DWORD* pdwDataLen
5=DWORD dwFlags
ParamCount=5
Header=cryptography.h.api;
[CryptGetUserKey]
1=HCRYPTPROV hProv
2=[CryptKeySpec] dwKeySpec
3=HCRYPTKEY* phUserKey
ParamCount=3
Header=cryptography.h.api;
[CryptImportKey]
1=HCRYPTPROV hProv
2=BYTE* pbData
3=DWORD dwDataLen
4=HCRYPTKEY hPubKey
5=[CryptImportKeyFlags] dwFlags
6=HCRYPTKEY* phKey
ParamCount=6
Header=cryptography.h.api;
[CryptSetKeyParam]
1=HCRYPTKEY hKey
2=[CryptKeyParam] dwParam
3=const BYTE* pbData
4=DWORD dwFlags
ParamCount=4
Header=cryptography.h.api;
[CryptDecrypt]
1=HCRYPTKEY hKey
2=HCRYPTHASH hHash
3=BOOL Final
4=DWORD dwFlags
5=BYTE* pbData
6=DWORD* pdwDataLen
ParamCount=6
Header=cryptography.h.api;
[CryptEncrypt]
1=HCRYPTKEY hKey
2=HCRYPTHASH hHash
3=BOOL Final
4=DWORD dwFlags
5=BYTE* pbData
6=DWORD* pdwDataLen
7=DWORD dwBufLen
ParamCount=7
Header=cryptography.h.api;
[CryptCreateHash]
1=HCRYPTPROV hProv
2=[ALG_ID] Algid
3=HCRYPTKEY hKey
4=[CryptCreateHashFlags] dwFlags
5=HCRYPTHASH* phHash
ParamCount=5
Header=cryptography.h.api;
[CryptDestroyHash]
1=HCRYPTHASH hHash
ParamCount=1
Header=cryptography.h.api;
[CryptDuplicateHash]
1=HCRYPTHASH hHash
2=DWORD* pdwReserved
3=DWORD dwFlags
4=HCRYPTHASH* phHash
ParamCount=4
Header=cryptography.h.api;
[CryptGetHashParam]
1=HCRYPTHASH hHash
2=[CryptHashParam] dwParam
3=BYTE* pbData
4=DWORD* pdwDataLen
5=DWORD dwFlags
ParamCount=5
Header=cryptography.h.api;
[CryptHashData]
1=HCRYPTHASH hHash
2=BYTE* pbData
3=DWORD dwDataLen
4=[CryptHashDataFlags] dwFlags
ParamCount=4
Header=cryptography.h.api;
[CryptHashSessionKey]
1=HCRYPTHASH hHash
2=HCRYPTKEY hKey
3=DWORD dwFlags
ParamCount=3
Header=cryptography.h.api;
[CryptSetHashParam]
1=HCRYPTHASH hHash
2=[CryptHashParam] dwParam
3=const BYTE* pbData
4=DWORD dwFlags
ParamCount=4
Header=cryptography.h.api;
[CryptSignHash]
1=HCRYPTHASH hHash
2=[CryptKeySpec] dwKeySpec
3=LPCTSTR sDescription
4=[CryptSignFlags] dwFlags
5=BYTE* pbSignature
6=DWORD* pdwSigLen
ParamCount=6
Header=cryptography.h.api;
[CryptVerifySignature]
1=HCRYPTHASH hHash
2=BYTE* pbSignature
3=DWORD dwSigLen
4=HCRYPTKEY hPubKey
5=LPCTSTR sDescription
6=[CryptSignFlags] dwFlags
ParamCount=6
Header=cryptography.h.api;
[ControlTrace]
1=TRACEHANDLE SessionHandle
2=LPCTSTR SessionName
3=PEVENT_TRACE_PROPERTIES Properties
4=ULONG ControlCode
ParamCount=4
Header=advapi32.h.api;events.h.api;
[EnableTrace]
1=ULONG Enable
2=ULONG EnableFlag
3=ULONG EnableLevel
4=LPCGUID ControlGuid
5=TRACEHANDLE SessionHandle
ParamCount=5
Header=advapi32.h.api;windows.h.api;
[EnableTraceEx]
1=LPCGUID ProviderId
2=LPCGUID SourceId
3=TRACEHANDLE TraceHandle
4=ULONG IsEnabled
5=UCHAR Level
6=ULONGLONG MatchAnyKeyword
7=ULONGLONG MatchAllKeyword
8=ULONG EnableProperty
9=PEVENT_FILTER_DESCRIPTOR EnableFilterDesc
ParamCount=9
Header=advapi32.h.api;windows.h.api;
[EnableTraceEx2]
1=TRACEHANDLE TraceHandle
2=LPCGUID ProviderId
3=ULONG ControlCode
4=UCHAR Level
5=ULONGLONG MatchAnyKeyword
6=ULONGLONG MatchAllKeyword
7=ULONG Timeout
8=PENABLE_TRACE_PARAMETERS EnableParameters
ParamCount=8
Header=advapi32.h.api;windows.h.api;
[EnumerateTraceGuids]
1=PTRACE_GUID_PROPERTIES* GuidPropertiesArray
2=ULONG PropertyArrayCount
3=PULONG GuidCount
ParamCount=3
Header=advapi32.h.api;
[EnumerateTraceGuidsEx]
1=TRACE_QUERY_INFO_CLASS TraceQueryInfoClass
2=PVOID InBuffer
3=ULONG InBufferSize
4=PVOID OutBuffer
5=ULONG OutBufferSize
6=PULONG ReturnLength
ParamCount=6
Header=advapi32.h.api;
[FlushTrace]
1=TRACEHANDLE SessionHandle
2=LPCTSTR SessionName
3=PEVENT_TRACE_PROPERTIES Properties
ParamCount=3
Header=advapi32.h.api;events.h.api;
[QueryAllTraces]
1=PEVENT_TRACE_PROPERTIES* PropertyArray
2=ULONG PropertyArrayCount
3=PULONG SessionCount
ParamCount=3
Header=events.h.api;
[QueryTrace]
1=TRACEHANDLE SessionHandle
2=LPCTSTR SessionName
3=PEVENT_TRACE_PROPERTIES Properties
ParamCount=3
Header=advapi32.h.api;events.h.api;
[StartTrace]
1=PTRACEHANDLE SessionHandle
2=LPCTSTR SessionName
3=PEVENT_TRACE_PROPERTIES Properties
ParamCount=3
Header=advapi32.h.api;events.h.api;
[StopTrace]
1=TRACEHANDLE SessionHandle
2=LPCTSTR SessionName
3=PEVENT_TRACE_PROPERTIES Properties
ParamCount=3
Header=advapi32.h.api;events.h.api;
[TraceQueryInformation]
1=TRACEHANDLE SessionHandle
2=TRACE_QUERY_INFO_CLASS InformationClass
3=PVOID TraceInformation
4=ULONG InformationLength
5=PULONG ReturnLength
ParamCount=5
Header=advapi32.h.api;
[TraceSetInformation]
1=TRACEHANDLE SessionHandle
2=[TRACE_INFO_CLASS] InformationClass
3=PVOID TraceInformation
4=ULONG InformationLength
ParamCount=4
Header=advapi32.h.api;
[UpdateTrace]
1=TRACEHANDLE SessionHandle
2=LPCTSTR SessionName
3=PEVENT_TRACE_PROPERTIES Properties
ParamCount=3
Header=advapi32.h.api;events.h.api;
[CreateTraceInstanceId]
1=HANDLE RegHandle
2=PEVENT_INSTANCE_INFO pInstInfo
ParamCount=2
Header=events.h.api;windows.h.api;
[GetTraceEnableFlags]
1=TRACEHANDLE SessionHandle
ParamCount=1
Header=advapi32.h.api;
[GetTraceEnableLevel]
1=TRACEHANDLE SessionHandle
ParamCount=1
Header=advapi32.h.api;
[GetTraceLoggerHandle]
1=PVOID Buffer
ParamCount=1
[RegisterTraceGuids]
1=WMIDPREQUEST RequestAddress
2=PVOID RequestContext
3=LPCGUID ControlGuid
4=ULONG GuidCount
5=PTRACE_GUID_REGISTRATION TraceGuidReg
6=LPCTSTR MofImagePath
7=LPCTSTR MofResourceName
8=PTRACEHANDLE RegistrationHandle
ParamCount=8
Header=advapi32.h.api;windows.h.api;
[TraceEvent]
1=TRACEHANDLE SessionHandle
2=PEVENT_TRACE_HEADER EventTrace
ParamCount=2
Header=advapi32.h.api;events.h.api;
[TraceEventInstance]
1=TRACEHANDLE SessionHandle
2=PEVENT_INSTANCE_HEADER EventTrace
3=PEVENT_INSTANCE_INFO pInstInfo
4=PEVENT_INSTANCE_INFO pParentInstInfo
ParamCount=4
Header=advapi32.h.api;events.h.api;
[TraceMessage]
1=TRACEHANDLE SessionHandle
2=[TRACE_MESSAGE_FLAGS] MessageFlags
3=LPGUID MessageGuid
4=USHORT MessageNumber
ParamCount=-4
Header=advapi32.h.api;windows.h.api;
[TraceMessageVa]
1=TRACEHANDLE SessionHandle
2=ULONG MessageFlags
3=LPGUID MessageGuid
4=USHORT MessageNumber
5=va_list MessageArgList
ParamCount=5
Header=advapi32.h.api;windows.h.api;
[UnregisterTraceGuids]
1=TRACEHANDLE RegistrationHandle
ParamCount=1
Header=advapi32.h.api;
[EventActivityIdControl]
1=[EventActivity] ControlCode
2=LPGUID ActivityId
ParamCount=2
Header=events.h.api;windows.h.api;
[EventEnabled]
1=REGHANDLE RegHandle
2=PCEVENT_DESCRIPTOR EventDescriptor
ParamCount=2
Header=advapi32.h.api;events.h.api;
[EventProviderEnabled]
1=REGHANDLE RegHandle
2=UCHAR Level
3=ULONGLONG Keyword
ParamCount=3
Header=advapi32.h.api;
[EventRegister]
1=LPCGUID ProviderId
2=ENABLECALLBACK EnableCallback
3=PVOID CallbackContext
4=PREGHANDLE RegHandle
ParamCount=4
Header=advapi32.h.api;windows.h.api;
[EventSetInformation]
1=REGHANDLE RegHandle
2=[EVENT_INFO_CLASS] InformationClass
3=PVOID EventInformation
4=ULONG InformationLength
ParamCount=4
Header=advapi32.h.api;
[EventUnregister]
1=REGHANDLE RegHandle
ParamCount=1
Header=advapi32.h.api;
[EventWrite]
1=REGHANDLE RegHandle
2=PCEVENT_DESCRIPTOR EventDescriptor
3=ULONG UserDataCount
4=PEVENT_DATA_DESCRIPTOR UserData
ParamCount=4
Header=advapi32.h.api;events.h.api;
[EventWriteEx]
1=REGHANDLE RegHandle
2=PCEVENT_DESCRIPTOR EventDescriptor
3=ULONG64 Filter
4=ULONG Flags
5=LPCGUID ActivityId
6=LPCGUID RelatedActivityId
7=ULONG UserDataCount
8=PEVENT_DATA_DESCRIPTOR UserData
ParamCount=8
Header=advapi32.h.api;events.h.api;windows.h.api;
[EventWriteString]
1=REGHANDLE RegHandle
2=UCHAR Level
3=ULONGLONG Keyword
4=PCWSTR String
ParamCount=4
Header=advapi32.h.api;
[EventWriteTransfer]
1=REGHANDLE RegHandle
2=PCEVENT_DESCRIPTOR EventDescriptor
3=LPCGUID ActivityId
4=LPCGUID RelatedActivityId
5=ULONG UserDataCount
6=PEVENT_DATA_DESCRIPTOR UserData
ParamCount=6
Header=advapi32.h.api;events.h.api;windows.h.api;
[CloseTrace]
1=TRACEHANDLE TraceHandle
ParamCount=1
Header=advapi32.h.api;
[OpenTrace]
1=PEVENT_TRACE_LOGFILE Logfile
ParamCount=1
Header=events.h.api;
[ProcessTrace]
1=PTRACEHANDLE HandleArray
2=ULONG HandleCount
3=LPFILETIME StartTime
4=LPFILETIME EndTime
ParamCount=4
Header=advapi32.h.api;windows.h.api;
[RemoveTraceCallback]
1=LPCGUID pGuid
ParamCount=1
Header=windows.h.api;
[SetTraceCallback]
1=LPCGUID pGuid
2=PEVENT_CALLBACK EventCallback
ParamCount=2
Header=events.h.api;windows.h.api;
[EventAccessControl]
1=LPGUID Guid
2=ULONG Operation
3=PSID Sid
4=ULONG Rights
5=BOOLEAN AllowOrDeny
ParamCount=5
Header=windows.h.api;
[EventAccessQuery]
1=LPGUID Guid
2=PSECURITY_DESCRIPTOR Buffer
3=PULONG BufferSize
ParamCount=3
Header=security.h.api;windows.h.api;
[EventAccessRemove]
1=LPGUID Guid
ParamCount=1
Header=windows.h.api;
[AccessCheck]
1=PSECURITY_DESCRIPTOR pSecurityDescriptor
2=HANDLE ClientToken
3=DWORD DesiredAccess
4=PGENERIC_MAPPING GenericMapping
5=PPRIVILEGE_SET PrivilegeSet
6=LPDWORD PrivilegeSetLength
7=LPDWORD GrantedAccess
8=LPBOOL AccessStatus
ParamCount=8
Header=security.h.api;windows.h.api;
[AccessCheckByType]
1=PSECURITY_DESCRIPTOR pSecurityDescriptor
2=PSID PrincipalSelfSid
3=HANDLE ClientToken
4=DWORD DesiredAccess
5=POBJECT_TYPE_LIST ObjectTypeList
6=DWORD ObjectTypeListLength
7=PGENERIC_MAPPING GenericMapping
8=PPRIVILEGE_SET PrivilegeSet
9=LPDWORD PrivilegeSetLength
10=LPDWORD GrantedAccess
11=LPBOOL AccessStatus
ParamCount=11
Header=security.h.api;windows.h.api;
[AccessCheckByTypeResultList]
1=PSECURITY_DESCRIPTOR pSecurityDescriptor
2=PSID PrincipalSelfSid
3=HANDLE ClientToken
4=DWORD DesiredAccess
5=POBJECT_TYPE_LIST ObjectTypeList
6=DWORD ObjectTypeListLength
7=PGENERIC_MAPPING GenericMapping
8=PPRIVILEGE_SET PrivilegeSet
9=LPDWORD PrivilegeSetLength
10=LPDWORD GrantedAccessList
11=LPDWORD AccessStatusList
ParamCount=11
Header=security.h.api;windows.h.api;
[AdjustTokenGroups]
1=HANDLE TokenHandle
2=BOOL ResetToDefault
3=PTOKEN_GROUPS NewState
4=DWORD BufferLength
5=PTOKEN_GROUPS PreviousState
6=PDWORD ReturnLength
ParamCount=6
Header=security.h.api;windows.h.api;
[AdjustTokenPrivileges]
1=HANDLE TokenHandle
2=BOOL DisableAllPrivileges
3=PTOKEN_PRIVILEGES NewState
4=DWORD BufferLength
5=PTOKEN_PRIVILEGES PreviousState
6=PDWORD ReturnLength
ParamCount=6
Header=security.h.api;windows.h.api;
[AllocateAndInitializeSid]
1=PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority
2=BYTE nSubAuthorityCount
3=DWORD dwSubAuthority0
4=DWORD dwSubAuthority1
5=DWORD dwSubAuthority2
6=DWORD dwSubAuthority3
7=DWORD dwSubAuthority4
8=DWORD dwSubAuthority5
9=DWORD dwSubAuthority6
10=DWORD dwSubAuthority7
11=PSID* pSid
ParamCount=11
Header=security.h.api;windows.h.api;
[AllocateLocallyUniqueId]
1=PLUID Luid
ParamCount=1
Header=windows.h.api;
[BuildExplicitAccessWithName]
1=PEXPLICIT_ACCESS pExplicitAccess
2=LPTSTR pTrusteeName
3=DWORD AccessPermissions
4=[ACCESS_MODE] AccessMode
5=[AceFlags] Inheritance
ParamCount=5
Header=security.h.api;
[BuildImpersonateExplicitAccessWithName]
1=PEXPLICIT_ACCESS pExplicitAccess
2=LPTSTR pTrusteeName
3=PTRUSTEE pTrustee
4=DWORD AccessPermissions
5=[ACCESS_MODE] AccessMode
6=[AceFlags] Inheritance
ParamCount=6
Header=security.h.api;
[BuildImpersonateTrustee]
1=PTRUSTEE pTrustee
2=PTRUSTEE pImpersonateTrustee
ParamCount=2
Header=security.h.api;
[BuildTrusteeWithName]
1=PTRUSTEE pTrustee
2=LPTSTR pName
ParamCount=2
Header=security.h.api;
[BuildTrusteeWithObjectsAndName]
1=PTRUSTEE pTrustee
2=POBJECTS_AND_NAME pObjName
3=[SE_OBJECT_TYPE] ObjectType
4=LPTSTR ObjectTypeName
5=LPTSTR InheritedObjectTypeName
6=LPTSTR Name
ParamCount=6
Header=security.h.api;
[BuildTrusteeWithObjectsAndSid]
1=PTRUSTEE pTrustee
2=POBJECTS_AND_SID pObjSid
3=GUID* pObjectGuid
4=GUID* pInheritedObjectGuid
5=PSID pSid
ParamCount=5
Header=security.h.api;windows.h.api;
[BuildTrusteeWithSid]
1=PTRUSTEE pTrustee
2=PSID pSid
ParamCount=2
Header=security.h.api;windows.h.api;
[CheckTokenMembership]
1=HANDLE TokenHandle
2=PSID SidToCheck
3=PBOOL IsMember
ParamCount=3
Header=windows.h.api;
[ConvertSecurityDescriptorToStringSecurityDescriptor]
1=PSECURITY_DESCRIPTOR SecurityDescriptor
2=DWORD RequestedStringSDRevision
3=[SECURITY_INFORMATION] SecurityInformation
4=LPTSTR* StringSecurityDescriptor
5=PULONG StringSecurityDescriptorLen
ParamCount=5
Header=security.h.api;windows.h.api;
[ConvertSidToStringSid]
1=PSID Sid
2=LPTSTR* StringSid
ParamCount=2
Header=windows.h.api;
[ConvertStringSecurityDescriptorToSecurityDescriptor]
1=LPCTSTR StringSecurityDescriptor
2=DWORD StringSDRevision
3=PSECURITY_DESCRIPTOR* SecurityDescriptor
4=PULONG SecurityDescriptorSize
ParamCount=4
Header=security.h.api;
[ConvertStringSidToSid]
1=LPCTSTR StringSid
2=PSID* Sid
ParamCount=2
Header=windows.h.api;
[CopySid]
1=DWORD nDestinationSidLength
2=PSID pDestinationSid
3=PSID pSourceSid
ParamCount=3
Header=windows.h.api;
[CreateRestrictedToken]
1=HANDLE ExistingTokenHandle
2=[CreateRestrictedTokenFlags] Flags
3=DWORD DisableSidCount
4=PSID_AND_ATTRIBUTES SidsToDisable
5=DWORD DeletePrivilegeCount
6=PLUID_AND_ATTRIBUTES PrivilegesToDelete
7=DWORD RestrictedSidCount
8=PSID_AND_ATTRIBUTES SidsToRestrict
9=PHANDLE NewTokenHandle
ParamCount=9
Header=advapi32.h.api;security.h.api;windows.h.api;
[CreateWellKnownSid]
1=[WELL_KNOWN_SID_TYPE] WellKnownSidType
2=PSID DomainSid
3=PSID pSid
4=DWORD* cbSid
ParamCount=4
Header=security.h.api;windows.h.api;
[DuplicateToken]
1=HANDLE ExistingTokenHandle
2=[SECURITY_IMPERSONATION_LEVEL] ImpersonationLevel
3=PHANDLE DuplicateTokenHandle
ParamCount=3
Header=security.h.api;windows.h.api;
[DuplicateTokenEx]
1=HANDLE hExistingToken
2=[TOKEN_ACCESS_MASK_DWORD] dwDesiredAccess
3=LPSECURITY_ATTRIBUTES lpTokenAttributes
4=[SECURITY_IMPERSONATION_LEVEL] ImpersonationLevel
5=[TOKEN_TYPE] TokenType
6=PHANDLE phNewToken
ParamCount=6
Header=advapi32.h.api;security.h.api;windows.h.api;
[EqualDomainSid]
1=PSID pSid1
2=PSID pSid2
3=BOOL* pfEqual
ParamCount=3
Header=windows.h.api;
[EqualPrefixSid]
1=PSID pSid1
2=PSID pSid2
ParamCount=2
Header=windows.h.api;
[EqualSid]
1=PSID pSid1
2=PSID pSid2
ParamCount=2
Header=windows.h.api;
[FreeSid]
1=PSID pSid
ParamCount=1
Header=windows.h.api;
[GetAuditedPermissionsFromAcl]
1=PACL pacl
2=PTRUSTEE pTrustee
3=PACCESS_MASK pSuccessfulAuditedRights
4=PACCESS_MASK pFailedAuditRights
ParamCount=4
Header=security.h.api;windows.h.api;
[GetEffectiveRightsFromAcl]
1=PACL pacl
2=PTRUSTEE pTrustee
3=PACCESS_MASK pAccessRights
ParamCount=3
Header=security.h.api;windows.h.api;
[GetExplicitEntriesFromAcl]
1=PACL pacl
2=PULONG pcCountOfExplicitEntries
3=PEXPLICIT_ACCESS* pListOfExplicitEntries
ParamCount=3
Header=security.h.api;
[GetLengthSid]
1=PSID pSid
ParamCount=1
Header=windows.h.api;
[GetMultipleTrustee]
1=PTRUSTEE pTrustee
ParamCount=1
Header=security.h.api;
[GetMultipleTrusteeOperation]
1=PTRUSTEE pTrustee
ParamCount=1
Header=security.h.api;
[GetNamedSecurityInfo]
1=LPTSTR pObjectName
2=[SE_OBJECT_TYPE] ObjectType
3=[SECURITY_INFORMATION] SecurityInfo
4=PSID* ppsidOwner
5=PSID* ppsidGroup
6=PACL* ppDacl
7=PACL* ppSacl
8=PSECURITY_DESCRIPTOR_RELATIVE* ppSecurityDescriptor
ParamCount=8
Header=security.h.api;windows.h.api;
[GetSecurityDescriptorControl]
1=PSECURITY_DESCRIPTOR pSecurityDescriptor
2=PSECURITY_DESCRIPTOR_CONTROL pControl
3=LPDWORD lpdwRevision
ParamCount=3
Header=security.h.api;
[GetSecurityInfo]
1=HANDLE handle
2=[SE_OBJECT_TYPE] ObjectType
3=[SECURITY_INFORMATION] SecurityInfo
4=PSID* ppsidOwner
5=PSID* ppsidGroup
6=PACL* ppDacl
7=PACL* ppSacl
8=PSECURITY_DESCRIPTOR* ppSecurityDescriptor
ParamCount=8
Header=security.h.api;windows.h.api;
[GetSidIdentifierAuthority]
1=PSID pSid
ParamCount=1
Header=windows.h.api;
[GetSidLengthRequired]
1=UCHAR nSubAuthorityCount
ParamCount=1
[GetSidSubAuthority]
1=PSID pSid
2=DWORD nSubAuthority
ParamCount=2
Header=windows.h.api;
[GetSidSubAuthorityCount]
1=PSID pSid
ParamCount=1
Header=windows.h.api;
[GetTokenInformation]
1=HANDLE TokenHandle
2=[TOKEN_INFORMATION_CLASS] TokenInformationClass
3=LPVOID TokenInformation
4=DWORD TokenInformationLength
5=PDWORD ReturnLength
ParamCount=5
Header=security.h.api;windows.h.api;
[GetTrusteeForm]
1=PTRUSTEE pTrustee
ParamCount=1
Header=security.h.api;
[GetTrusteeName]
1=PTRUSTEE pTrustee
ParamCount=1
Header=security.h.api;
[GetTrusteeType]
1=PTRUSTEE pTrustee
ParamCount=1
Header=security.h.api;
[GetWindowsAccountDomainSid]
1=PSID pSid
2=PSID ppDomainSid
3=DWORD* cbSid
ParamCount=3
Header=windows.h.api;
[InitializeSid]
1=PSID Sid
2=PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority
3=BYTE nSubAuthorityCount
ParamCount=3
Header=security.h.api;windows.h.api;
[IsTokenRestricted]
1=HANDLE TokenHandle
ParamCount=1
Header=windows.h.api;
[IsValidSid]
1=PSID pSid
ParamCount=1
Header=windows.h.api;
[IsWellKnownSid]
1=PSID pSid
2=[WELL_KNOWN_SID_TYPE] WellKnownSidType
ParamCount=2
Header=security.h.api;windows.h.api;
[LookupAccountName]
1=LPCTSTR lpSystemName
2=LPCTSTR lpAccountName
3=PSID Sid
4=LPDWORD cbSid
5=LPTSTR ReferencedDomainName
6=LPDWORD cchReferencedDomainName
7=PSID_NAME_USE peUse
ParamCount=7
Header=security.h.api;windows.h.api;
[LookupAccountSid]
1=LPCTSTR lpSystemName
2=PSID lpSid
3=LPTSTR lpName
4=LPDWORD cchName
5=LPTSTR lpReferencedDomainName
6=LPDWORD cchReferencedDomainName
7=PSID_NAME_USE peUse
ParamCount=7
Header=security.h.api;windows.h.api;
[LookupPrivilegeDisplayName]
1=LPCTSTR lpSystemName
2=LPCTSTR lpName
3=LPTSTR lpDisplayName
4=LPDWORD cchDisplayName
5=LPDWORD lpLanguageId
ParamCount=5
[LookupPrivilegeName]
1=LPCTSTR lpSystemName
2=PLUID lpLuid
3=LPTSTR lpName
4=LPDWORD cchName
ParamCount=4
Header=windows.h.api;
[LookupPrivilegeValue]
1=LPCTSTR lpSystemName
2=LPCTSTR lpName
3=PLUID lpLuid
ParamCount=3
Header=windows.h.api;
[OpenProcessToken]
1=[ProcessHandle] ProcessHandle
2=[TOKEN_ACCESS_MASK_DWORD] DesiredAccess
3=PHANDLE TokenHandle
ParamCount=3
Header=advapi32.h.api;windows.h.api;
[OpenThreadToken]
1=[ThreadHandle] ThreadHandle
2=[TOKEN_ACCESS_MASK_DWORD] DesiredAccess
3=BOOL OpenAsSelf
4=PHANDLE TokenHandle
ParamCount=4
Header=advapi32.h.api;windows.h.api;
[QuerySecurityAccessMask]
1=[SECURITY_INFORMATION] SecurityInformation
2=LPDWORD DesiredAccess
ParamCount=2
Header=windows.h.api;
[SetEntriesInAcl]
1=ULONG cCountOfExplicitEntries
2=PEXPLICIT_ACCESS pListOfExplicitEntries
3=PACL OldAcl
4=PACL* NewAcl
ParamCount=4
Header=security.h.api;
[SetNamedSecurityInfo]
1=LPTSTR pObjectName
2=[SE_OBJECT_TYPE] ObjectType
3=[SECURITY_INFORMATION] SecurityInfo
4=PSID psidOwner
5=PSID psidGroup
6=PACL pDacl
7=PACL pSacl
ParamCount=7
Header=security.h.api;windows.h.api;
[SetSecurityAccessMask]
1=[SECURITY_INFORMATION] SecurityInformation
2=LPDWORD DesiredAccess
ParamCount=2
Header=windows.h.api;
[SetSecurityDescriptorControl]
1=PSECURITY_DESCRIPTOR pSecurityDescriptor
2=[SECURITY_DESCRIPTOR_CONTROL] ControlBitsOfInterest
3=[SECURITY_DESCRIPTOR_CONTROL] ControlBitsToSet
ParamCount=3
Header=security.h.api;
[SetSecurityInfo]
1=HANDLE handle
2=[SE_OBJECT_TYPE] ObjectType
3=[SECURITY_INFORMATION] SecurityInfo
4=PSID psidOwner
5=PSID psidGroup
6=PACL pDacl
7=PACL pSacl
ParamCount=7
Header=security.h.api;windows.h.api;
[SetThreadToken]
1=PHANDLE Thread
2=HANDLE Token
ParamCount=2
Header=windows.h.api;
[SetTokenInformation]
1=HANDLE TokenHandle
2=[TOKEN_INFORMATION_CLASS] TokenInformationClass
3=LPVOID TokenInformation
4=DWORD TokenInformationLength
ParamCount=4
Header=security.h.api;windows.h.api;
[TreeResetNamedSecurityInfo]
1=LPTSTR pObjectName
2=[SE_OBJECT_TYPE] ObjectType
3=[SECURITY_INFORMATION] SecurityInfo
4=PSID pOwner
5=PSID pGroup
6=PACL pDacl
7=PACL pSacl
8=BOOL KeepExplicit
9=FN_PROGRESS fnProgress
10=[PROG_INVOKE_SETTING] ProgressInvokeSetting
11=PVOID Args
ParamCount=11
Header=advapi32.h.api;security.h.api;windows.h.api;
[TreeSetNamedSecurityInfo]
1=LPTSTR pObjectName
2=[SE_OBJECT_TYPE] ObjectType
3=[SECURITY_INFORMATION] SecurityInfo
4=PSID pOwner
5=PSID pGroup
6=PACL pDacl
7=PACL pSacl
8=[TreeSecAction] dwAction
9=FN_PROGRESS fnProgress
10=[PROG_INVOKE_SETTING] ProgressInvokeSetting
11=PVOID Args
ParamCount=11
Header=advapi32.h.api;security.h.api;windows.h.api;
[AreAllAccessesGranted]
1=DWORD GrantedAccess
2=DWORD DesiredAccess
ParamCount=2
[AreAnyAccessesGranted]
1=DWORD GrantedAccess
2=DWORD DesiredAccess
ParamCount=2
[BuildSecurityDescriptor]
1=PTRUSTEE pOwner
2=PTRUSTEE pGroup
3=ULONG cCountOfAccessEntries
4=PEXPLICIT_ACCESS pListOfAccessEntries
5=ULONG cCountOfAuditEntries
6=PEXPLICIT_ACCESS pListOfAuditEntries
7=PSECURITY_DESCRIPTOR pOldSD
8=PULONG pSizeNewSD
9=PSECURITY_DESCRIPTOR* pNewSD
ParamCount=9
Header=security.h.api;
[ConvertToAutoInheritPrivateObjectSecurity]
1=PSECURITY_DESCRIPTOR ParentDescriptor
2=PSECURITY_DESCRIPTOR CurrentSecurityDescriptor
3=PSECURITY_DESCRIPTOR* NewSecurityDescriptor
4=GUID* ObjectType
5=BOOLEAN IsDirectoryObject
6=PGENERIC_MAPPING GenericMapping
ParamCount=6
Header=security.h.api;windows.h.api;
[CreatePrivateObjectSecurity]
1=PSECURITY_DESCRIPTOR ParentDescriptor
2=PSECURITY_DESCRIPTOR CreatorDescriptor
3=PSECURITY_DESCRIPTOR* NewDescriptor
4=BOOL IsDirectoryObject
5=HANDLE Token
6=PGENERIC_MAPPING GenericMapping
ParamCount=6
Header=security.h.api;windows.h.api;
[CreatePrivateObjectSecurityEx]
1=PSECURITY_DESCRIPTOR ParentDescriptor
2=PSECURITY_DESCRIPTOR CreatorDescriptor
3=PSECURITY_DESCRIPTOR* NewDescriptor
4=GUID* ObjectType
5=BOOL IsContainerObject
6=[SEF_Flags] AutoInheritFlags
7=HANDLE Token
8=PGENERIC_MAPPING GenericMapping
ParamCount=8
Header=advapi32.h.api;security.h.api;windows.h.api;
[CreatePrivateObjectSecurityWithMultipleInheritance]
1=PSECURITY_DESCRIPTOR ParentDescriptor
2=PSECURITY_DESCRIPTOR CreatorDescriptor
3=PSECURITY_DESCRIPTOR* NewDescriptor
4=GUID** ObjectTypes
5=ULONG GuidCount
6=BOOL IsContainerObject
7=[SEF_Flags] AutoInheritFlags
8=HANDLE Token
9=PGENERIC_MAPPING GenericMapping
ParamCount=9
Header=advapi32.h.api;security.h.api;windows.h.api;
[DestroyPrivateObjectSecurity]
1=PSECURITY_DESCRIPTOR* ObjectDescriptor
ParamCount=1
Header=security.h.api;
[GetPrivateObjectSecurity]
1=PSECURITY_DESCRIPTOR ObjectDescriptor
2=[SECURITY_INFORMATION] SecurityInformation
3=PSECURITY_DESCRIPTOR ResultantDescriptor
4=DWORD DescriptorLength
5=PDWORD ReturnLength
ParamCount=5
Header=security.h.api;windows.h.api;
[ImpersonateAnonymousToken]
1=[ThreadHandle] ThreadHandle
ParamCount=1
Header=windows.h.api;
[ImpersonateLoggedOnUser]
1=HANDLE hToken
ParamCount=1
Header=windows.h.api;
[ImpersonateNamedPipeClient]
1=HANDLE hNamedPipe
ParamCount=1
Header=windows.h.api;
[ImpersonateSelf]
1=[SECURITY_IMPERSONATION_LEVEL] ImpersonationLevel
ParamCount=1
Header=security.h.api;
[LookupSecurityDescriptorParts]
1=PTRUSTEE* pOwner
2=PTRUSTEE* pGroup
3=PULONG cCountOfAccessEntries
4=PEXPLICIT_ACCESS* pListOfAccessEntries
5=PULONG cCountOfAuditEntries
6=PEXPLICIT_ACCESS* pListOfAuditEntries
7=PSECURITY_DESCRIPTOR pSD
ParamCount=7
Header=security.h.api;
[MapGenericMask]
1=PDWORD AccessMask
2=PGENERIC_MAPPING GenericMapping
ParamCount=2
Header=security.h.api;
[ObjectCloseAuditAlarm]
1=LPCTSTR SubsystemName
2=LPVOID HandleId
3=BOOL GenerateOnClose
ParamCount=3
[ObjectDeleteAuditAlarm]
1=LPCTSTR SubsystemName
2=LPVOID HandleId
3=BOOL GenerateOnClose
ParamCount=3
[ObjectOpenAuditAlarm]
1=LPCTSTR SubsystemName
2=LPVOID HandleId
3=LPTSTR ObjectTypeName
4=LPTSTR ObjectName
5=PSECURITY_DESCRIPTOR pSecurityDescriptor
6=HANDLE ClientToken
7=DWORD DesiredAccess
8=DWORD GrantedAccess
9=PPRIVILEGE_SET Privileges
10=BOOL ObjectCreation
11=BOOL AccessGranted
12=LPBOOL GenerateOnClose
ParamCount=12
Header=security.h.api;windows.h.api;
[ObjectPrivilegeAuditAlarm]
1=LPCTSTR SubsystemName
2=LPVOID HandleId
3=HANDLE ClientToken
4=DWORD DesiredAccess
5=PPRIVILEGE_SET Privileges
6=BOOL AccessGranted
ParamCount=6
Header=security.h.api;windows.h.api;
[PrivilegeCheck]
1=HANDLE ClientToken
2=PPRIVILEGE_SET RequiredPrivileges
3=LPBOOL pfResult
ParamCount=3
Header=security.h.api;windows.h.api;
[PrivilegedServiceAuditAlarm]
1=LPCTSTR SubsystemName
2=LPCTSTR ServiceName
3=HANDLE ClientToken
4=PPRIVILEGE_SET Privileges
5=BOOL AccessGranted
ParamCount=5
Header=security.h.api;windows.h.api;
[RevertToSelf]
ParamCount=0
[SetPrivateObjectSecurity]
1=[SECURITY_INFORMATION] SecurityInformation
2=PSECURITY_DESCRIPTOR ModificationDescriptor
3=PSECURITY_DESCRIPTOR* ObjectsSecurityDescriptor
4=PGENERIC_MAPPING GenericMapping
5=HANDLE Token
ParamCount=5
Header=security.h.api;windows.h.api;
[SetPrivateObjectSecurityEx]
1=[SECURITY_INFORMATION] SecurityInformation
2=PSECURITY_DESCRIPTOR ModificationDescriptor
3=PSECURITY_DESCRIPTOR* ObjectsSecurityDescriptor
4=[SEF_Flags] AutoInheritFlags
5=PGENERIC_MAPPING GenericMapping
6=HANDLE Token
ParamCount=6
Header=advapi32.h.api;security.h.api;windows.h.api;
[GetSecurityDescriptorRMControl]
1=PSECURITY_DESCRIPTOR SecurityDescriptor
2=PUCHAR RMControl
ParamCount=2
Header=security.h.api;
[SetSecurityDescriptorRMControl]
1=PSECURITY_DESCRIPTOR SecurityDescriptor
2=PUCHAR RMControl
ParamCount=2
Header=security.h.api;
[AccessCheckAndAuditAlarm]
1=LPCTSTR SubsystemName
2=LPVOID HandleId
3=LPTSTR ObjectTypeName
4=LPTSTR ObjectName
5=PSECURITY_DESCRIPTOR SecurityDescriptor
6=DWORD DesiredAccess
7=PGENERIC_MAPPING GenericMapping
8=BOOL ObjectCreation
9=LPDWORD GrantedAccess
10=LPBOOL AccessStatus
11=LPBOOL pfGenerateOnClose
ParamCount=11
Header=security.h.api;
[AccessCheckByTypeAndAuditAlarm]
1=LPCTSTR SubsystemName
2=LPVOID HandleId
3=LPCTSTR ObjectTypeName
4=LPCTSTR ObjectName
5=PSECURITY_DESCRIPTOR pSecurityDescriptor
6=PSID PrincipalSelfSid
7=DWORD DesiredAccess
8=[AUDIT_EVENT_TYPE] AuditType
9=DWORD Flags
10=POBJECT_TYPE_LIST ObjectTypeList
11=DWORD ObjectTypeListLength
12=PGENERIC_MAPPING GenericMapping
13=BOOL ObjectCreation
14=LPDWORD GrantedAccess
15=LPBOOL AccessStatus
16=LPBOOL pfGenerateOnClose
ParamCount=16
Header=security.h.api;windows.h.api;
[AccessCheckByTypeResultListAndAuditAlarm]
1=LPCTSTR SubsystemName
2=LPVOID HandleId
3=LPCTSTR ObjectTypeName
4=LPCTSTR ObjectName
5=PSECURITY_DESCRIPTOR pSecurityDescriptor
6=PSID PrincipalSelfSid
7=DWORD DesiredAccess
8=[AUDIT_EVENT_TYPE] AuditType
9=DWORD Flags
10=POBJECT_TYPE_LIST ObjectTypeList
11=DWORD ObjectTypeListLength
12=PGENERIC_MAPPING GenericMapping
13=BOOL ObjectCreation
14=LPDWORD GrantedAccess
15=LPDWORD AccessStatusList
16=LPBOOL pfGenerateOnClose
ParamCount=16
Header=security.h.api;windows.h.api;
[AccessCheckByTypeResultListAndAuditAlarmByHandle]
1=LPCTSTR SubsystemName
2=LPVOID HandleId
3=HANDLE ClientToken
4=LPCTSTR ObjectTypeName
5=LPCTSTR ObjectName
6=PSECURITY_DESCRIPTOR pSecurityDescriptor
7=PSID PrincipalSelfSid
8=DWORD DesiredAccess
9=[AUDIT_EVENT_TYPE] AuditType
10=DWORD Flags
11=POBJECT_TYPE_LIST ObjectTypeList
12=DWORD ObjectTypeListLength
13=PGENERIC_MAPPING GenericMapping
14=BOOL ObjectCreation
15=LPDWORD GrantedAccess
16=LPDWORD AccessStatusList
17=LPBOOL pfGenerateOnClose
ParamCount=17
Header=security.h.api;windows.h.api;
[AddAccessAllowedAce]
1=PACL pAcl
2=DWORD dwAceRevision
3=[ACCESS_MASK_DWORD] AccessMask
4=PSID pSid
ParamCount=4
Header=security.h.api;windows.h.api;
[AddAccessAllowedAceEx]
1=PACL pAcl
2=DWORD dwAceRevision
3=[AceFlags] AceFlags
4=[ACCESS_MASK_DWORD] AccessMask
5=PSID pSid
ParamCount=5
Header=security.h.api;windows.h.api;
[AddAccessAllowedObjectAce]
1=PACL pAcl
2=DWORD dwAceRevision
3=[AceFlags] AceFlags
4=[ACCESS_MASK_DWORD] AccessMask
5=GUID* ObjectTypeGuid
6=GUID* InheritedObjectTypeGuid
7=PSID pSid
ParamCount=7
Header=security.h.api;windows.h.api;
[AddAccessDeniedAce]
1=PACL pAcl
2=DWORD dwAceRevision
3=[ACCESS_MASK_DWORD] AccessMask
4=PSID pSid
ParamCount=4
Header=security.h.api;windows.h.api;
[AddAccessDeniedAceEx]
1=PACL pAcl
2=DWORD dwAceRevision
3=[AceFlags] AceFlags
4=[ACCESS_MASK_DWORD] AccessMask
5=PSID pSid
ParamCount=5
Header=security.h.api;windows.h.api;
[AddAccessDeniedObjectAce]
1=PACL pAcl
2=DWORD dwAceRevision
3=[AceFlags] AceFlags
4=[ACCESS_MASK_DWORD] AccessMask
5=GUID* ObjectTypeGuid
6=GUID* InheritedObjectTypeGuid
7=PSID pSid
ParamCount=7
Header=security.h.api;windows.h.api;
[AddAce]
1=PACL pAcl
2=DWORD dwAceRevision
3=DWORD dwStartingAceIndex
4=LPVOID pAceList
5=DWORD nAceListLength
ParamCount=5
Header=security.h.api;
[AddAuditAccessAce]
1=PACL pAcl
2=DWORD dwAceRevision
3=[ACCESS_MASK_DWORD] dwAccessMask
4=PSID pSid
5=BOOL bAuditSuccess
6=BOOL bAuditFailure
ParamCount=6
Header=security.h.api;windows.h.api;
[AddAuditAccessAceEx]
1=PACL pAcl
2=DWORD dwAceRevision
3=[AceFlags] AceFlags
4=[ACCESS_MASK_DWORD] dwAccessMask
5=PSID pSid
6=BOOL bAuditSuccess
7=BOOL bAuditFailure
ParamCount=7
Header=security.h.api;windows.h.api;
[AddAuditAccessObjectAce]
1=PACL pAcl
2=DWORD dwAceRevision
3=[AceFlags] AceFlags
4=[ACCESS_MASK_DWORD] AccessMask
5=GUID* ObjectTypeGuid
6=GUID* InheritedObjectTypeGuid
7=PSID pSid
8=BOOL bAuditSuccess
9=BOOL bAuditFailure
ParamCount=9
Header=security.h.api;windows.h.api;
[AddMandatoryAce]
1=PACL pAcl
2=DWORD dwAceRevision
3=[AceFlags] AceFlags
4=[MandatoryPolicyFlags] MandatoryPolicy
5=PSID pLabelSid
ParamCount=5
Header=advapi32.h.api;security.h.api;windows.h.api;
[DeleteAce]
1=PACL pAcl
2=DWORD dwAceIndex
ParamCount=2
Header=security.h.api;
[FindFirstFreeAce]
1=PACL pAcl
2=PACE* pAce
ParamCount=2
Header=security.h.api;
[FreeInheritedFromArray]
1=PINHERITED_FROM pInheritArray
2=USHORT AceCnt
3=PFN_OBJECT_MGR_FUNCTS pfnArray
ParamCount=3
Header=advapi32.h.api;
[GetAce]
1=PACL pAcl
2=DWORD dwAceIndex
3=PACE* pAce
ParamCount=3
Header=security.h.api;
[GetAclInformation]
1=PACL pAcl
2=LPVOID pAclInformation
3=DWORD nAclInformationLength
4=[ACL_INFORMATION_CLASS] dwAclInformationClass
ParamCount=4
Header=security.h.api;
[GetFileSecurity]
1=LPCTSTR lpFileName
2=[SECURITY_INFORMATION] RequestedInformation
3=PSECURITY_DESCRIPTOR pSecurityDescriptor
4=DWORD nLength
5=LPDWORD lpnLengthNeeded
ParamCount=5
Header=security.h.api;windows.h.api;
[GetInheritanceSource]
1=LPTSTR pObjectName
2=[SE_OBJECT_TYPE] ObjectType
3=[SECURITY_INFORMATION] SecurityInfo
4=BOOL Container
5=GUID** pObjectClassGuids
6=DWORD GuidCount
7=PACL pAcl
8=PFN_OBJECT_MGR_FUNCTS pfnArray
9=PGENERIC_MAPPING pGenericMapping
10=PINHERITED_FROM pInheritArray
ParamCount=10
Header=advapi32.h.api;security.h.api;windows.h.api;
[GetKernelObjectSecurity]
1=HANDLE Handle
2=[SECURITY_INFORMATION] RequestedInformation
3=PISECURITY_DESCRIPTOR_RELATIVE pSecurityDescriptor
4=DWORD nLength
5=LPDWORD lpnLengthNeeded
ParamCount=5
Header=security.h.api;windows.h.api;
[GetSecurityDescriptorDacl]
1=PSECURITY_DESCRIPTOR pSecurityDescriptor
2=LPBOOL lpbDaclPresent
3=PACL* pDacl
4=LPBOOL lpbDaclDefaulted
ParamCount=4
Header=security.h.api;
[GetSecurityDescriptorGroup]
1=PSECURITY_DESCRIPTOR pSecurityDescriptor
2=PSID* pGroup
3=LPBOOL lpbGroupDefaulted
ParamCount=3
Header=security.h.api;windows.h.api;
[GetSecurityDescriptorLength]
1=PSECURITY_DESCRIPTOR pSecurityDescriptor
ParamCount=1
Header=security.h.api;
[GetSecurityDescriptorOwner]
1=PSECURITY_DESCRIPTOR pSecurityDescriptor
2=PSID* pOwner
3=LPBOOL lpbOwnerDefaulted
ParamCount=3
Header=security.h.api;windows.h.api;
[GetSecurityDescriptorSacl]
1=PSECURITY_DESCRIPTOR pSecurityDescriptor
2=LPBOOL lpbSaclPresent
3=PACL* pSacl
4=LPBOOL lpbSaclDefaulted
ParamCount=4
Header=security.h.api;
[InitializeAcl]
1=PACL pAcl
2=DWORD nAclLength
3=DWORD dwAclRevision
ParamCount=3
Header=security.h.api;
[InitializeSecurityDescriptor]
1=PSECURITY_DESCRIPTOR pSecurityDescriptor
2=DWORD dwRevision
ParamCount=2
Header=security.h.api;
[IsValidAcl]
1=PACL pAcl
ParamCount=1
Header=security.h.api;
[IsValidSecurityDescriptor]
1=PSECURITY_DESCRIPTOR pSecurityDescriptor
ParamCount=1
Header=security.h.api;
[MakeAbsoluteSD]
1=PSECURITY_DESCRIPTOR_RELATIVE pSelfRelativeSD
2=PSECURITY_DESCRIPTOR pAbsoluteSD
3=LPDWORD lpdwAbsoluteSDSize
4=PACL pDacl
5=LPDWORD lpdwDaclSize
6=PACL pSacl
7=LPDWORD lpdwSaclSize
8=PSID pOwner
9=LPDWORD lpdwOwnerSize
10=PSID pPrimaryGroup
11=LPDWORD lpdwPrimaryGroupSize
ParamCount=11
Header=security.h.api;windows.h.api;
[MakeSelfRelativeSD]
1=PSECURITY_DESCRIPTOR pAbsoluteSD
2=PSECURITY_DESCRIPTOR pSelfRelativeSD
3=LPDWORD lpdwBufferLength
ParamCount=3
Header=security.h.api;
[QueryServiceObjectSecurity]
1=SC_HANDLE hService
2=[SECURITY_INFORMATION] dwSecurityInformation
3=PSECURITY_DESCRIPTOR lpSecurityDescriptor
4=DWORD cbBufSize
5=LPDWORD pcbBytesNeeded
ParamCount=5
Header=security.h.api;services.h.api;windows.h.api;
[RegGetKeySecurity]
1=[HKEY] hKey
2=[SECURITY_INFORMATION] SecurityInformation
3=PSECURITY_DESCRIPTOR pSecurityDescriptor
4=LPDWORD lpcbSecurityDescriptor
ParamCount=4
Header=registry.h.api;security.h.api;windows.h.api;
[RegSetKeySecurity]
1=[HKEY] hKey
2=[SECURITY_INFORMATION] SecurityInformation
3=PSECURITY_DESCRIPTOR pSecurityDescriptor
ParamCount=3
Header=registry.h.api;security.h.api;windows.h.api;
[SetAclInformation]
1=PACL pAcl
2=LPVOID pAclInformation
3=DWORD nAclInformationLength
4=[ACL_INFORMATION_CLASS] dwAclInformationClass
ParamCount=4
Header=security.h.api;
[SetFileSecurity]
1=LPCTSTR lpFileName
2=[SECURITY_INFORMATION] SecurityInformation
3=PSECURITY_DESCRIPTOR pSecurityDescriptor
ParamCount=3
Header=security.h.api;windows.h.api;
[SetKernelObjectSecurity]
1=HANDLE Handle
2=[SECURITY_INFORMATION] SecurityInformation
3=PSECURITY_DESCRIPTOR SecurityDescriptor
ParamCount=3
Header=security.h.api;windows.h.api;
[SetSecurityDescriptorDacl]
1=PSECURITY_DESCRIPTOR pSecurityDescriptor
2=BOOL bDaclPresent
3=PACL pDacl
4=BOOL bDaclDefaulted
ParamCount=4
Header=security.h.api;
[SetSecurityDescriptorGroup]
1=PSECURITY_DESCRIPTOR pSecurityDescriptor
2=PSID pGroup
3=BOOL bGroupDefaulted
ParamCount=3
Header=security.h.api;windows.h.api;
[SetSecurityDescriptorOwner]
1=PSECURITY_DESCRIPTOR pSecurityDescriptor
2=PSID pOwner
3=BOOL bOwnerDefaulted
ParamCount=3
Header=security.h.api;windows.h.api;
[SetSecurityDescriptorSacl]
1=PSECURITY_DESCRIPTOR pSecurityDescriptor
2=BOOL bSaclPresent
3=PACL pSacl
4=BOOL bSaclDefaulted
ParamCount=4
Header=security.h.api;
[SetServiceObjectSecurity]
1=SC_HANDLE hService
2=[SECURITY_INFORMATION] dwSecurityInformation
3=PSECURITY_DESCRIPTOR lpSecurityDescriptor
ParamCount=3
Header=security.h.api;services.h.api;windows.h.api;
[AuditComputeEffectivePolicyBySid]
1=PSID pSid
2=GUID* pSubCategoryGuids
3=ULONG PolicyCount
4=PAUDIT_POLICY_INFORMATION* ppAuditPolicy
ParamCount=4
Header=advapi32.h.api;security.h.api;windows.h.api;
[AuditComputeEffectivePolicyByToken]
1=HANDLE hTokenHandle
2=GUID* pSubCategoryGuids
3=ULONG PolicyCount
4=PAUDIT_POLICY_INFORMATION* ppAuditPolicy
ParamCount=4
Header=security.h.api;windows.h.api;
[AuditEnumerateCategories]
1=GUID** ppAuditCategoriesArray
2=PULONG pCountReturned
ParamCount=2
Header=windows.h.api;
[AuditEnumeratePerUserPolicy]
1=PPOLICY_AUDIT_SID_ARRAY* ppAuditSidArray
ParamCount=1
Header=security.h.api;
[AuditEnumerateSubCategories]
1=GUID* pAuditCategoryGuid
2=BOOLEAN bRetrieveAllSubCategories
3=GUID** ppAuditSubCategoriesArray
4=PULONG pCountReturned
ParamCount=4
Header=windows.h.api;
[AuditFree]
1=PVOID Buffer
ParamCount=1
[AuditLookupCategoryGuidFromCategoryId]
1=[POLICY_AUDIT_EVENT_TYPE] AuditCategoryId
2=GUID* pAuditCategoryGuid
ParamCount=2
Header=security.h.api;windows.h.api;
[AuditLookupCategoryIdFromCategoryGuid]
1=GUID* pAuditCategoryGuid
2=PPOLICY_AUDIT_EVENT_TYPE pAuditCategoryId
ParamCount=2
Header=security.h.api;windows.h.api;
[AuditLookupCategoryName]
1=GUID* pAuditCategoryGuid
2=PTSTR* ppszCategoryName
ParamCount=2
Header=windows.h.api;
[AuditLookupSubCategoryName]
1=GUID* pAuditSubCategoryGuid
2=PTSTR* ppszSubCategoryName
ParamCount=2
Header=windows.h.api;
[AuditQueryPerUserPolicy]
1=PSID pSid
2=GUID* pSubCategoryGuids
3=ULONG PolicyCount
4=PAUDIT_POLICY_INFORMATION* ppAuditPolicy
ParamCount=4
Header=advapi32.h.api;security.h.api;windows.h.api;
[AuditQuerySystemPolicy]
1=GUID* pSubCategoryGuids
2=ULONG PolicyCount
3=PAUDIT_POLICY_INFORMATION* ppAuditPolicy
ParamCount=3
Header=security.h.api;windows.h.api;
[AuditSetPerUserPolicy]
1=PSID pSid
2=PCAUDIT_POLICY_INFORMATION pAuditPolicy
3=ULONG PolicyCount
ParamCount=3
Header=advapi32.h.api;security.h.api;
[AuditSetSystemPolicy]
1=PCAUDIT_POLICY_INFORMATION pAuditPolicy
2=ULONG PolicyCount
ParamCount=2
Header=security.h.api;
[AuditQueryGlobalSacl]
1=PCTSTR ObjectTypeName
2=PACL* Acl
ParamCount=2
Header=security.h.api;
[AuditSetGlobalSacl]
1=PCTSTR ObjectTypeName
2=PACL Acl
ParamCount=2
Header=security.h.api;
[AuditQuerySecurity]
1=[SECURITY_INFORMATION] SecurityInformation
2=PSECURITY_DESCRIPTOR* ppSecurityDescriptor
ParamCount=2
Header=security.h.api;windows.h.api;
[AuditSetSecurity]
1=[SECURITY_INFORMATION] SecurityInformation
2=PSECURITY_DESCRIPTOR pSecurityDescriptor
ParamCount=2
Header=security.h.api;windows.h.api;
[AddConditionalAce]
1=PACL pAcl
2=DWORD dwAceRevision
3=[AceFlags] AceFlags
4=[ACE_TYPE|UCHAR] AceType
5=[ACCESS_MASK_DWORD] AccessMask
6=PSID pSid
7=PWCHAR ConditionStr
8=DWORD* ReturnLength
ParamCount=8
Header=security.h.api;windows.h.api;
[GetAppContainerNamedObjectPath]
1=HANDLE Token
2=PSID AppContainerSid
3=ULONG ObjectPathLength
4=LPWSTR ObjectPath
5=PULONG ReturnLength
ParamCount=5
Header=windows.h.api;
[LogonUser]
1=LPTSTR lpszUsername
2=LPTSTR lpszDomain
3=LPTSTR lpszPassword
4=[LogonType] dwLogonType
5=[LogonProvider] dwLogonProvider
6=PHANDLE phToken
ParamCount=6
Header=advapi32.h.api;windows.h.api;
[LogonUserEx]
1=LPTSTR lpszUsername
2=LPTSTR lpszDomain
3=LPTSTR lpszPassword
4=[LogonType] dwLogonType
5=[LogonProvider] dwLogonProvider
6=PHANDLE phToken
7=PSID* ppLogonSid
8=PVOID* ppProfileBuffer
9=LPDWORD pdwProfileLength
10=PQUOTA_LIMITS pQuotaLimits
ParamCount=10
Header=advapi32.h.api;security.h.api;windows.h.api;
[LogonUserExExW]
1=LPWSTR lpszUsername
2=LPWSTR lpszDomain
3=LPWSTR lpszPassword
4=[LogonType] dwLogonType
5=PTOKEN_GROUPS pTokenGroups
6=[LogonProvider] dwLogonProvider
7=PHANDLE phToken
8=PSID* ppLogonSid
9=PVOID* ppProfileBuffer
10=LPDWORD pdwProfileLength
11=PQUOTA_LIMITS pQuotaLimits
ParamCount=11
Header=advapi32.h.api;security.h.api;windows.h.api;
[CredDelete]
1=LPCTSTR TargetName
2=DWORD Type
3=DWORD Flags
ParamCount=3
[CredEnumerate]
1=LPCTSTR Filter
2=[CredEnumerateFlags] Flags
3=DWORD* Count
4=PCREDENTIAL** Credentials
ParamCount=4
Header=advapi32.h.api;security.h.api;
[CredFindBestCredential]
1=LPCTSTR TargetName
2=DWORD Type
3=DWORD Flags
4=PCREDENTIAL* Credential
ParamCount=4
Header=security.h.api;
[CredFree]
1=PVOID Buffer
ParamCount=1
[CredGetSessionTypes]
1=DWORD MaximumPersistCount
2=LPDWORD MaximumPersist
ParamCount=2
[CredGetTargetInfo]
1=LPCTSTR TargetName
2=[CredGetTargetInfoFlags] Flags
3=PCREDENTIAL_TARGET_INFORMATION* TargetInfo
ParamCount=3
Header=advapi32.h.api;security.h.api;
[CredIsProtected]
1=LPTSTR pszProtectedCredentials
2=CRED_PROTECTION_TYPE* pProtectionType
ParamCount=2
Header=security.h.api;
[CredProtect]
1=BOOL fAsSelf
2=LPTSTR pszCredentials
3=DWORD cchCredentials
4=LPTSTR pszProtectedCredentials
5=DWORD* pcchMaxChars
6=CRED_PROTECTION_TYPE* ProtectionType
ParamCount=6
Header=security.h.api;
[CredMarshalCredential]
1=[CRED_MARSHAL_TYPE] CredType
2=PVOID Credential
3=LPTSTR* MarshaledCredential
ParamCount=3
Header=security.h.api;
[CredRead]
1=LPCTSTR TargetName
2=[CredType] Type
3=DWORD Flags
4=PCREDENTIAL* Credential
ParamCount=4
Header=advapi32.h.api;security.h.api;
[CredReadDomainCredentials]
1=PCREDENTIAL_TARGET_INFORMATION TargetInfo
2=DWORD Flags
3=DWORD* Count
4=PCREDENTIAL** Credentials
ParamCount=4
Header=security.h.api;
[CredRename]
1=LPCTSTR OldTargetName
2=LPCTSTR NewTargetName
3=DWORD Type
4=DWORD Flags
ParamCount=4
[CredUnmarshalCredential]
1=LPCTSTR MarshaledCredential
2=PCRED_MARSHAL_TYPE CredType
3=PVOID* Credential
ParamCount=3
Header=security.h.api;
[CredUnprotect]
1=BOOL fAsSelf
2=LPTSTR pszProtectedCredentials
3=DWORD cchCredentials
4=LPTSTR pszCredentials
5=DWORD* pcchMaxChars
ParamCount=5
[CredWrite]
1=PCREDENTIAL Credential
2=DWORD Flags
ParamCount=2
Header=security.h.api;
[CredWriteDomainCredentials]
1=PCREDENTIAL_TARGET_INFORMATION TargetInfo
2=PCREDENTIAL Credential
3=DWORD Flags
ParamCount=3
Header=security.h.api;
[CredIsMarshaledCredential]
1=LPTSTR MarshaledCredential
ParamCount=1
[LsaEnumerateAccountsWithUserRight]
1=LSA_HANDLE PolicyHandle
2=PLSA_UNICODE_STRING UserRights
3=PVOID* EnumerationBuffer
4=PULONG CountReturned
ParamCount=4
Header=advapi32.h.api;network.h.api;
[LsaEnumerateTrustedDomainsEx]
1=LSA_HANDLE PolicyHandle
2=PLSA_ENUMERATION_HANDLE EnumerationContext
3=PVOID* Buffer
4=ULONG PreferredMaximumLength
5=PULONG CountReturned
ParamCount=5
Header=advapi32.h.api;
[LsaLookupNames]
1=LSA_HANDLE PolicyHandle
2=ULONG Count
3=PLSA_UNICODE_STRING Names
4=PLSA_REFERENCED_DOMAIN_LIST* ReferencedDomains
5=PLSA_TRANSLATED_SID* Sids
ParamCount=5
Header=advapi32.h.api;network.h.api;
[LsaLookupNames2]
1=LSA_HANDLE PolicyHandle
2=[LSA_LOOKUP_FLAGS] Flags
3=ULONG Count
4=PLSA_UNICODE_STRING Names
5=PLSA_REFERENCED_DOMAIN_LIST* ReferencedDomains
6=PLSA_TRANSLATED_SID2* Sids
ParamCount=6
Header=advapi32.h.api;network.h.api;
[LsaLookupPrivilegeValue]
1=LSA_HANDLE PolicyHandle
2=PUNICODE_STRING Name
3=PLUID Value
ParamCount=3
Header=advapi32.h.api;windows.h.api;
[LsaLookupSids]
1=LSA_HANDLE PolicyHandle
2=ULONG Count
3=PSID* Sids
4=PLSA_REFERENCED_DOMAIN_LIST* ReferencedDomains
5=PLSA_TRANSLATED_NAME* Names
ParamCount=5
Header=advapi32.h.api;network.h.api;windows.h.api;
[LsaLookupSids2]
1=LSA_HANDLE PolicyHandle
2=ULONG LookupOptions
3=ULONG Count
4=PSID* Sids
5=PLSA_REFERENCED_DOMAIN_LIST* ReferencedDomains
6=PLSA_TRANSLATED_NAME* Names
ParamCount=6
Header=advapi32.h.api;network.h.api;windows.h.api;
[LsaAddAccountRights]
1=LSA_HANDLE PolicyHandle
2=PSID AccountSid
3=PLSA_UNICODE_STRING UserRights
4=ULONG CountOfRights
ParamCount=4
Header=advapi32.h.api;network.h.api;windows.h.api;
[LsaEnumerateAccountRights]
1=LSA_HANDLE PolicyHandle
2=PSID AccountSid
3=PLSA_UNICODE_STRING* UserRights
4=PULONG CountOfRights
ParamCount=4
Header=advapi32.h.api;windows.h.api;
[LsaRemoveAccountRights]
1=LSA_HANDLE PolicyHandle
2=PSID AccountSid
3=BOOLEAN AllRights
4=PLSA_UNICODE_STRING UserRights
5=ULONG CountOfRights
ParamCount=5
Header=advapi32.h.api;network.h.api;windows.h.api;
[LsaCreateTrustedDomainEx]
1=LSA_HANDLE PolicyHandle
2=PTRUSTED_DOMAIN_INFORMATION_EX TrustedDomainInformation
3=PTRUSTED_DOMAIN_AUTH_INFORMATION AuthenticationInformation
4=[ACCESS_MASK] DesiredAccess
5=PLSA_HANDLE TrustedDomainHandle
ParamCount=5
Header=advapi32.h.api;windows.h.api;
[LsaDeleteTrustedDomain]
1=LSA_HANDLE PolicyHandle
2=PSID TrustedDomainSid
ParamCount=2
Header=advapi32.h.api;windows.h.api;
[LsaEnumerateTrustedDomains]
1=LSA_HANDLE PolicyHandle
2=PLSA_ENUMERATION_HANDLE EnumerationContext
3=PVOID* Buffer
4=ULONG PreferedMaximumLength
5=PULONG CountReturned
ParamCount=5
Header=advapi32.h.api;
[LsaOpenTrustedDomainByName]
1=LSA_HANDLE PolicyHandle
2=PLSA_UNICODE_STRING TrustedDomainName
3=[ACCESS_MASK] DesiredAccess
4=PLSA_HANDLE TrustedDomainHandle
ParamCount=4
Header=advapi32.h.api;network.h.api;windows.h.api;
[LsaQueryTrustedDomainInfo]
1=LSA_HANDLE PolicyHandle
2=PSID TrustedDomainSid
3=[TRUSTED_INFORMATION_CLASS] InformationClass
4=PVOID* Buffer
ParamCount=4
Header=advapi32.h.api;windows.h.api;
[LsaQueryTrustedDomainInfoByName]
1=LSA_HANDLE PolicyHandle
2=PLSA_UNICODE_STRING TrustedDomainName
3=[TRUSTED_INFORMATION_CLASS] InformationClass
4=PVOID* Buffer
ParamCount=4
Header=advapi32.h.api;network.h.api;
[LsaSetTrustedDomainInfoByName]
1=LSA_HANDLE PolicyHandle
2=PLSA_UNICODE_STRING TrustedDomainName
3=[TRUSTED_INFORMATION_CLASS] InformationClass
4=PVOID Buffer
ParamCount=4
Header=advapi32.h.api;network.h.api;
[LsaSetTrustedDomainInformation]
1=LSA_HANDLE PolicyHandle
2=PSID TrustedDomainSid
3=[TRUSTED_INFORMATION_CLASS] InformationClass
4=PVOID Buffer
ParamCount=4
Header=advapi32.h.api;windows.h.api;
[LsaRetrievePrivateData]
1=LSA_HANDLE PolicyHandle
2=PLSA_UNICODE_STRING KeyName
3=PLSA_UNICODE_STRING* PrivateData
ParamCount=3
Header=advapi32.h.api;network.h.api;
[LsaStorePrivateData]
1=LSA_HANDLE PolicyHandle
2=PLSA_UNICODE_STRING KeyName
3=PLSA_UNICODE_STRING PrivateData
ParamCount=3
Header=advapi32.h.api;network.h.api;
[LsaClose]
1=LSA_HANDLE ObjectHandle
ParamCount=1
Header=advapi32.h.api;
[LsaFreeMemory]
1=PVOID Buffer
ParamCount=1
[LsaNtStatusToWinError]
1=[NTSTATUS] Status
ParamCount=1
Header=ntstatus.h.api;
[SaferCloseLevel]
1=SAFER_LEVEL_HANDLE hLevelHandle
ParamCount=1
Header=security.h.api;
[SaferIdentifyLevel]
1=DWORD dwNumProperties
2=PSAFER_CODE_PROPERTIES pCodeProperties
3=SAFER_LEVEL_HANDLE* pLevelHandle
4=LPVOID lpReserved
ParamCount=4
Header=security.h.api;
[SaferComputeTokenFromLevel]
1=SAFER_LEVEL_HANDLE LevelHandle
2=HANDLE InAccessToken
3=PHANDLE OutAccessToken
4=DWORD dwFlags
5=LPVOID lpReserved
ParamCount=5
Header=security.h.api;windows.h.api;
[SaferCreateLevel]
1=[SaferScopeId] dwScopeId
2=DWORD dwLevelId
3=DWORD OpenFlags
4=SAFER_LEVEL_HANDLE* pLevelHandle
5=LPVOID lpReserved
ParamCount=5
Header=advapi32.h.api;security.h.api;
[SaferGetLevelInformation]
1=SAFER_LEVEL_HANDLE LevelHandle
2=[SAFER_OBJECT_INFO_CLASS] dwInfoType
3=LPVOID lpQueryBuffer
4=DWORD dwInBufferSize
5=LPDWORD lpdwOutBufferSize
ParamCount=5
Header=security.h.api;
[SaferGetPolicyInformation]
1=[SaferScopeId] dwScopeId
2=[SAFER_POLICY_INFO_CLASS] SaferPolicyInfoClass
3=DWORD InfoBufferSize
4=PVOID InfoBuffer
5=PDWORD InfoBufferRetSize
6=LPVOID lpReserved
ParamCount=6
Header=advapi32.h.api;security.h.api;
[SaferiIsExecutableFileType]
1=LPCWSTR szFullPath
2=BOOLEAN bFromShellExecute
ParamCount=2
[SaferRecordEventLogEntry]
1=SAFER_LEVEL_HANDLE hLevel
2=LPCWSTR szTargetPath
3=LPVOID lpReserved
ParamCount=3
Header=security.h.api;
[CloseThreadWaitChainSession]
1=HWCT WctHandle
ParamCount=1
Header=advapi32.h.api;
[GetThreadWaitChain]
1=HWCT WctHandle
2=DWORD_PTR Context
3=DWORD Flags
4=DWORD ThreadId
5=LPDWORD NodeCount
6=PWAITCHAIN_NODE_INFO NodeInfoArray
7=LPBOOL IsCycle
ParamCount=7
Header=advapi32.h.api;
[OpenThreadWaitChainSession]
1=DWORD Flags
2=PWAITCHAINCALLBACK callback
ParamCount=2
Header=advapi32.h.api;
[RegisterWaitChainCOMCallback]
1=PCOGETCALLSTATE CallStateCallback
2=PCOGETACTIVATIONSTATE ActivationStateCallback
ParamCount=2
Header=advapi32.h.api;
[LsaOpenPolicy]
1=PLSA_UNICODE_STRING SystemName
2=PLSA_OBJECT_ATTRIBUTES ObjectAttributes
3=[ACCESS_MASK] DesiredAccess
4=PLSA_HANDLE PolicyHandle
ParamCount=4
Header=advapi32.h.api;network.h.api;windows.h.api;
[LsaQueryInformationPolicy]
1=LSA_HANDLE PolicyHandle
2=[POLICY_INFORMATION_CLASS] InformationClass
3=PVOID* Buffer
ParamCount=3
Header=advapi32.h.api;
[LsaSetInformationPolicy]
1=LSA_HANDLE PolicyHandle
2=[POLICY_INFORMATION_CLASS] InformationClass
3=PVOID Buffer
ParamCount=3
Header=advapi32.h.api;
[LsaGetAppliedCAPIDs]
1=PLSA_UNICODE_STRING SystemName
2=PSID** CAPIDs
3=PULONG CAPIDCount
ParamCount=3
Header=network.h.api;windows.h.api;
[LsaQueryCAPs]
1=PSID* CAPIDs
2=ULONG CAPIDCount
3=PCENTRAL_ACCESS_POLICY* CAPs
4=PULONG CAPCount
ParamCount=4
Header=advapi32.h.api;windows.h.api;
[LsaSetCAPs]
1=PLSA_UNICODE_STRING CAPDNs
2=ULONG CAPDNCount
3=ULONG Flags
ParamCount=3
Header=network.h.api;
[LsaQueryDomainInformationPolicy]
1=LSA_HANDLE PolicyHandle
2=[POLICY_DOMAIN_INFORMATION_CLASS] InformationClass
3=PVOID* Buffer
ParamCount=3
Header=advapi32.h.api;
[LsaQueryForestTrustInformation]
1=LSA_HANDLE PolicyHandle
2=PLSA_UNICODE_STRING TrustedDomainName
3=PLSA_FOREST_TRUST_INFORMATION* ForestTrustInfo
ParamCount=3
Header=advapi32.h.api;network.h.api;
[LsaSetDomainInformationPolicy]
1=LSA_HANDLE PolicyHandle
2=[POLICY_DOMAIN_INFORMATION_CLASS] InformationClass
3=PVOID Buffer
ParamCount=3
Header=advapi32.h.api;
[LsaSetForestTrustInformation]
1=LSA_HANDLE PolicyHandle
2=PLSA_UNICODE_STRING TrustedDomainName
3=PLSA_FOREST_TRUST_INFORMATION ForestTrustInfo
4=BOOLEAN CheckOnly
5=PLSA_FOREST_TRUST_COLLISION_INFORMATION* CollisionInfo
ParamCount=5
Header=advapi32.h.api;network.h.api;
[LsaOpenSecret]
1=LSA_HANDLE PolicyHandle
2=PLSA_UNICODE_STRING SecretName
3=[ACCESS_MASK] DesiredAccess
4=PLSA_HANDLE SecretHandle
ParamCount=4
Header=advapi32.h.api;network.h.api;windows.h.api;
[LsaSetSecret]
1=LSA_HANDLE SecretHandle
2=PLSA_UNICODE_STRING CurrentValue
3=PLSA_UNICODE_STRING OldValue
ParamCount=3
Header=advapi32.h.api;network.h.api;
[LsaQuerySecret]
1=LSA_HANDLE SecretHandle
2=PLSA_UNICODE_STRING* CurrentValue
3=PLARGE_INTEGER CurrentValueSetTime
4=PLSA_UNICODE_STRING* OldValue
5=PLARGE_INTEGER OldValueSetTime
ParamCount=5
Header=advapi32.h.api;windows.h.api;
[SystemFunction036]
1=PVOID RandomBuffer
2=ULONG RandomBufferLength
ParamCount=2
[SystemFunction040]
1=PVOID Memory
2=ULONG MemorySize
3=[RTL_ENCRYPT_OPTION_FLAGS] OptionFlags
ParamCount=3
Header=advapi32.h.api;
[SystemFunction041]
1=PVOID Memory
2=ULONG MemorySize
3=[RTL_ENCRYPT_OPTION_FLAGS] OptionFlags
ParamCount=3
Header=advapi32.h.api;