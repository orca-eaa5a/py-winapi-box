[CallingConvention]
@=STDCALL
[accept]
1=[SOCKET] s
2=struct sockaddr* addr
3=int* addrlen
ParamCount=3
Header=sockets.h.api;common.h.api;
[bind]
1=[SOCKET] s
2=struct sockaddr* name
3=int namelen
ParamCount=3
Header=sockets.h.api;common.h.api;
[closesocket]
1=[SOCKET] s
ParamCount=1
Header=sockets.h.api;common.h.api;
[connect]
1=[SOCKET] s
2=struct sockaddr* name
3=int namelen
ParamCount=3
Header=sockets.h.api;common.h.api;
[freeaddrinfo]
1=struct addrinfo* ai
ParamCount=1
Header=sockets.h.api;common.h.api;
[getaddrinfo]
1=const char* nodename
2=const char* servname
3=struct addrinfo* hints
4=struct addrinfo** res
ParamCount=4
Header=sockets.h.api;common.h.api;
[FreeAddrInfoEx]
1=PADDRINFOEX pAddrInfo
ParamCount=1
Header=sockets.h.api;common.h.api;
[GetAddrInfoEx]
1=PCTSTR pName
2=PCTSTR pServiceName
3=[NameSpaceFlags] dwNameSpace
4=LPGUID lpNspId
5=ADDRINFOEX* pHints
6=PADDRINFOEX* ppResult
7=struct timeval* timeout
8=LPOVERLAPPED lpOverlapped
9=LPLOOKUPSERVICE_COMPLETION_ROUTINE lpCompletionRoutine
10=LPHANDLE lpNameHandle
ParamCount=10
Header=sockets.h.api;common.h.api;windows.h.api;
[FreeAddrInfoW]
1=PADDRINFOW pAddrInfo
ParamCount=1
Header=sockets.h.api;common.h.api;
[GetAddrInfoW]
1=PCWSTR pNodeName
2=PCWSTR pServiceName
3=ADDRINFOW* pHints
4=PADDRINFOW* ppResult
ParamCount=4
Header=sockets.h.api;common.h.api;
[gethostbyaddr]
1=const char* addr
2=int len
3=[AddressFamily] type
ParamCount=3
Header=sockets.h.api;common.h.api;
[gethostbyname]
1=const char* name
ParamCount=1
[gethostname]
1=char* name
2=int namelen
ParamCount=2
[getnameinfo]
1=struct sockaddr* sa
2=socklen_t salen
3=char* host
4=DWORD hostlen
5=char* serv
6=DWORD servlen
7=[NI_Flags] flags
ParamCount=7
Header=sockets.h.api;common.h.api;
[GetNameInfoW]
1=SOCKADDR* pSockaddr
2=socklen_t SockaddrLength
3=PWCHAR pNodeBuffer
4=DWORD NodeBufferSize
5=PWCHAR pServiceBuffer
6=DWORD ServiceBufferSize
7=[NI_Flags] Flags
ParamCount=7
Header=sockets.h.api;common.h.api;
[getpeername]
1=[SOCKET] s
2=struct sockaddr* name
3=int* namelen
ParamCount=3
Header=sockets.h.api;common.h.api;
[getprotobyname]
1=const char* name
ParamCount=1
[getprotobynumber]
1=int number
ParamCount=1
[getservbyname]
1=const char* name
2=const char* proto
ParamCount=2
[getservbyport]
1=int port
2=const char* proto
ParamCount=2
[getsockname]
1=[SOCKET] s
2=struct sockaddr* name
3=int* namelen
ParamCount=3
Header=sockets.h.api;common.h.api;
[getsockopt]
1=[SOCKET] s
2=[SocketLevel] level
3=[SocketOption] optname
4=LPVOID|char* optval
5=int* optlen
ParamCount=5
Header=sockets.h.api;common.h.api;
[htonl]
1=u_long hostlong
ParamCount=1
[htons]
1=u_short hostshort
ParamCount=1
[inet_addr]
1=const char* cp
ParamCount=1
[inet_ntoa]
1=struct in_addr in
ParamCount=-1
Header=sockets.h.api;common.h.api;
[InetNtopW]
1=INT Family
2=PVOID pAddr
3=PWSTR pStringBuf
4=size_t StringBufSize
ParamCount=4
[inet_ntop]
1=INT Family
2=PVOID pAddr
3=PSTR pStringBuf
4=size_t StringBufSize
ParamCount=4
[inet_pton]
1=INT Family
2=PCSTR pszAddrString
3=PVOID pAddrBuf
ParamCount=3
[InetPtonW]
1=INT Family
2=PCWSTR pszAddrString
3=PVOID pAddrBuf
ParamCount=3
[ioctlsocket]
1=[SOCKET] s
2=[Socket_IOCTL] cmd
3=u_long* argp
ParamCount=3
Header=sockets.h.api;common.h.api;
[listen]
1=[SOCKET] s
2=int backlog
ParamCount=2
Header=sockets.h.api;common.h.api;
[ntohl]
1=u_long netlong
ParamCount=1
[ntohs]
1=u_short netshort
ParamCount=1
[recv]
1=[SOCKET] s
2=LPVOID|char* buf
3=int len
4=[SendRecvFlags] flags
ParamCount=4
Header=sockets.h.api;common.h.api;
[recvfrom]
1=[SOCKET] s
2=LPVOID|char* buf
3=int len
4=int flags
5=struct sockaddr* from
6=int* fromlen
ParamCount=6
Header=sockets.h.api;common.h.api;
[select]
1=int nfds
2=fd_set* readfds
3=fd_set* writefds
4=fd_set* exceptfds
5=struct timeval* timeout
ParamCount=5
Header=sockets.h.api;common.h.api;
[send]
1=[SOCKET] s
2=LPVOID buf
3=int len
4=[SendRecvFlags] flags
ParamCount=4
Header=sockets.h.api;common.h.api;
[sendto]
1=[SOCKET] s
2=LPVOID buf
3=int len
4=[SendRecvFlags] flags
5=struct sockaddr* to
6=int tolen
ParamCount=6
Header=sockets.h.api;common.h.api;
[SetAddrInfoEx]
1=PCTSTR pName
2=PCTSTR pServiceName
3=SOCKET_ADDRESS* pAddresses
4=DWORD dwAddressCount
5=LPBLOB lpBlob
6=DWORD dwFlags
7=[NameSpaceFlags] dwNameSpace
8=LPGUID lpNspId
9=struct timeval* timeout
10=LPOVERLAPPED lpOverlapped
11=LPLOOKUPSERVICE_COMPLETION_ROUTINE lpCompletionRoutine
12=LPHANDLE lpNameHandle
ParamCount=12
Header=sockets.h.api;common.h.api;windows.h.api;
[setsockopt]
1=[SOCKET] s
2=[SocketLevel] level
3=[SocketOption] optname
4=LPVOID optval
5=int optlen
ParamCount=5
Header=sockets.h.api;common.h.api;
[shutdown]
1=[SOCKET] s
2=[SocketShutdownFlags] how
ParamCount=2
Header=sockets.h.api;common.h.api;
[socket]
1=[AddressFamily] af
2=[SocketType] type
3=[SocketProtocol] protocol
ParamCount=3
Header=sockets.h.api;common.h.api;
[WSAAccept]
1=[SOCKET] s
2=struct sockaddr* addr
3=LPINT addrlen
4=LPCONDITIONPROC lpfnCondition
5=DWORD dwCallbackData
ParamCount=5
Header=sockets.h.api;common.h.api;
[WSAAddressToString]
1=LPSOCKADDR lpsaAddress
2=DWORD dwAddressLength
3=LPWSAPROTOCOL_INFO lpProtocolInfo
4=LPTSTR lpszAddressString
5=LPDWORD lpdwAddressStringLength
ParamCount=5
Header=sockets.h.api;common.h.api;
[WSAAsyncGetHostByAddr]
1=HWND hWnd
2=unsigned int wMsg
3=const char* addr
4=int len
5=int type
6=char* buf
7=int buflen
ParamCount=7
Header=windows.h.api;
[WSAAsyncGetHostByName]
1=HWND hWnd
2=unsigned int wMsg
3=const char* name
4=char* buf
5=int buflen
ParamCount=5
Header=windows.h.api;
[WSAAsyncGetProtoByName]
1=HWND hWnd
2=unsigned int wMsg
3=const char* name
4=char* buf
5=int buflen
ParamCount=5
Header=windows.h.api;
[WSAAsyncGetProtoByNumber]
1=HWND hWnd
2=unsigned int wMsg
3=int number
4=char* buf
5=int buflen
ParamCount=5
Header=windows.h.api;
[WSAAsyncGetServByName]
1=HWND hWnd
2=unsigned int wMsg
3=const char* name
4=const char* proto
5=char* buf
6=int buflen
ParamCount=6
Header=windows.h.api;
[WSAAsyncGetServByPort]
1=HWND hWnd
2=unsigned int wMsg
3=int port
4=const char* proto
5=char* buf
6=int buflen
ParamCount=6
Header=windows.h.api;
[WSAAsyncSelect]
1=[SOCKET] s
2=HWND hWnd
3=unsigned int wMsg
4=[FDEvents] lEvent
ParamCount=4
Header=sockets.h.api;common.h.api;windows.h.api;
[WSACancelAsyncRequest]
1=HANDLE hAsyncTaskHandle
ParamCount=1
Header=windows.h.api;
[WSACleanup]
ParamCount=0
[WSACloseEvent]
1=WSAEVENT hEvent
ParamCount=1
Header=sockets.h.api;common.h.api;
[WSAConnect]
1=[SOCKET] s
2=struct sockaddr* name
3=int namelen
4=LPWSABUF lpCallerData
5=LPWSABUF lpCalleeData
6=LPQOS lpSQOS
7=LPQOS lpGQOS
ParamCount=7
Header=sockets.h.api;common.h.api;
[WSAConnectByList]
1=[SOCKET] s
2=PSOCKET_ADDRESS_LIST SocketAddressList
3=LPDWORD LocalAddressLength
4=LPSOCKADDR LocalAddress
5=LPDWORD RemoteAddressLength
6=LPSOCKADDR RemoteAddress
7=struct timeval* timeout
8=LPWSAOVERLAPPED Reserved
ParamCount=8
Header=sockets.h.api;common.h.api;
[WSAConnectByName]
1=[SOCKET] s
2=LPSTR nodename
3=LPSTR servicename
4=LPDWORD LocalAddressLength
5=LPSOCKADDR LocalAddress
6=LPDWORD RemoteAddressLength
7=LPSOCKADDR RemoteAddress
8=struct timeval* timeout
9=LPWSAOVERLAPPED Reserved
ParamCount=9
Header=sockets.h.api;common.h.api;
[WSACreateEvent]
ParamCount=0
[WSADuplicateSocket]
1=[SOCKET] s
2=DWORD dwProcessId
3=LPWSAPROTOCOL_INFO lpProtocolInfo
ParamCount=3
Header=sockets.h.api;common.h.api;
[WSAEnumNameSpaceProviders]
1=LPDWORD lpdwBufferLength
2=LPWSANAMESPACE_INFO lpnspBuffer
ParamCount=2
Header=sockets.h.api;common.h.api;
[WSAEnumNameSpaceProvidersEx]
1=LPDWORD lpdwBufferLength
2=LPWSANAMESPACE_INFOEX lpnspBuffer
ParamCount=2
Header=sockets.h.api;common.h.api;
[WSAEnumNetworkEvents]
1=[SOCKET] s
2=WSAEVENT hEventObject
3=LPWSANETWORKEVENTS lpNetworkEvents
ParamCount=3
Header=sockets.h.api;common.h.api;
[WSAEnumProtocols]
1=LPINT lpiProtocols
2=LPWSAPROTOCOL_INFO lpProtocolBuffer
3=LPDWORD lpdwBufferLength
ParamCount=3
Header=sockets.h.api;common.h.api;
[WSAEventSelect]
1=[SOCKET] s
2=WSAEVENT hEventObject
3=[FDEvents] lNetworkEvents
ParamCount=3
Header=sockets.h.api;common.h.api;
[WSAGetLastError]
ParamCount=0
[WSAGetOverlappedResult]
1=[SOCKET] s
2=LPWSAOVERLAPPED lpOverlapped
3=LPDWORD lpcbTransfer
4=BOOL fWait
5=LPDWORD lpdwFlags
ParamCount=5
Header=sockets.h.api;common.h.api;
[WSAGetServiceClassInfo]
1=LPGUID lpProviderId
2=LPGUID lpServiceClassId
3=LPDWORD lpdwBufferLength
4=LPWSASERVICECLASSINFO lpServiceClassInfo
ParamCount=4
Header=sockets.h.api;common.h.api;windows.h.api;
[WSAGetServiceClassNameByClassId]
1=LPGUID lpServiceClassId
2=LPTSTR lpszServiceClassName
3=LPDWORD lpdwBufferLength
ParamCount=3
Header=windows.h.api;
[WSAHtonl]
1=[SOCKET] s
2=u_long hostlong
3=u_long* lpnetlong
ParamCount=3
Header=sockets.h.api;common.h.api;
[WSAHtons]
1=[SOCKET] s
2=u_short hostshort
3=u_short* lpnetshort
ParamCount=3
Header=sockets.h.api;common.h.api;
[WSAInstallServiceClass]
1=LPWSASERVICECLASSINFO lpServiceClassInfo
ParamCount=1
Header=sockets.h.api;common.h.api;
[WSAIoctl]
1=[SOCKET] s
2=[WsaIoctl] dwIoControlCode
3=LPVOID lpvInBuffer
4=DWORD cbInBuffer
5=LPVOID lpvOutBuffer
6=DWORD cbOutBuffer
7=LPDWORD lpcbBytesReturned
8=LPWSAOVERLAPPED lpOverlapped
9=LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine
ParamCount=9
Header=ws2_32.h.api;sockets.h.api;
[WSAJoinLeaf]
1=[SOCKET] s
2=struct sockaddr* name
3=int namelen
4=LPWSABUF lpCallerData
5=LPWSABUF lpCalleeData
6=LPQOS lpSQOS
7=LPQOS lpGQOS
8=DWORD dwFlags
ParamCount=8
Header=sockets.h.api;common.h.api;
[WSALookupServiceBegin]
1=LPWSAQUERYSET lpqsRestrictions
2=[LookupServiceFlags] dwControlFlags
3=LPHANDLE lphLookup
ParamCount=3
Header=ws2_32.h.api;sockets.h.api;windows.h.api;
[WSALookupServiceEnd]
1=HANDLE hLookup
ParamCount=1
Header=windows.h.api;
[WSALookupServiceNext]
1=HANDLE hLookup
2=[LookupServiceFlags] dwControlFlags
3=LPDWORD lpdwBufferLength
4=LPWSAQUERYSET lpqsResults
ParamCount=4
Header=ws2_32.h.api;sockets.h.api;windows.h.api;
[WSANtohl]
1=[SOCKET] s
2=u_long netlong
3=u_long* lphostlong
ParamCount=3
Header=sockets.h.api;common.h.api;
[WSANtohs]
1=[SOCKET] s
2=u_short netshort
3=u_short* lphostshort
ParamCount=3
Header=sockets.h.api;common.h.api;
[WSAPoll]
1=ULONG nfds
2=INT timeout
ParamCount=2
[WSAProviderConfigChange]
1=LPHANDLE lpNotificationHandle
2=LPWSAOVERLAPPED lpOverlapped
3=LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine
ParamCount=3
Header=sockets.h.api;common.h.api;windows.h.api;
[WSARecv]
1=[SOCKET] s
2=LPWSABUF_IN lpBuffers
3=DWORD dwBufferCount
4=LPDWORD lpNumberOfBytesRecvd
5=SendRecvFlags* lpFlags
6=LPWSAOVERLAPPED lpOverlapped
7=LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine
ParamCount=7
Header=sockets.h.api;common.h.api;
[WSARecvDisconnect]
1=[SOCKET] s
2=LPWSABUF lpInboundDisconnectData
ParamCount=2
Header=sockets.h.api;common.h.api;
[WSARecvFrom]
1=[SOCKET] s
2=LPWSABUF lpBuffers
3=DWORD dwBufferCount
4=LPDWORD lpNumberOfBytesRecvd
5=LPDWORD lpFlags
6=struct sockaddr* lpFrom
7=LPINT lpFromlen
8=LPWSAOVERLAPPED lpOverlapped
9=LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine
ParamCount=9
Header=sockets.h.api;common.h.api;
[WSARemoveServiceClass]
1=LPGUID lpServiceClassId
ParamCount=1
Header=windows.h.api;
[WSAResetEvent]
1=WSAEVENT hEvent
ParamCount=1
Header=sockets.h.api;common.h.api;
[WSASend]
1=[SOCKET] s
2=LPWSABUF lpBuffers
3=DWORD dwBufferCount
4=LPDWORD lpNumberOfBytesSent
5=[SendRecvFlags] dwFlags
6=LPWSAOVERLAPPED lpOverlapped
7=LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine
ParamCount=7
Header=sockets.h.api;common.h.api;
[WSASendDisconnect]
1=[SOCKET] s
2=LPWSABUF lpOutboundDisconnectData
ParamCount=2
Header=sockets.h.api;common.h.api;
[WSASendMsg]
1=[SOCKET] s
2=LPWSAMSG lpMsg
3=DWORD dwFlags
4=LPDWORD lpNumberOfBytesSent
5=LPWSAOVERLAPPED lpOverlapped
6=LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine
ParamCount=6
Header=sockets.h.api;common.h.api;
[WSASendTo]
1=[SOCKET] s
2=LPWSABUF lpBuffers
3=DWORD dwBufferCount
4=LPDWORD lpNumberOfBytesSent
5=[SendRecvFlags] dwFlags
6=struct sockaddr* lpTo
7=int iToLen
8=LPWSAOVERLAPPED lpOverlapped
9=LPWSAOVERLAPPED_COMPLETION_ROUTINE lpCompletionRoutine
ParamCount=9
Header=sockets.h.api;common.h.api;
[WSASetEvent]
1=WSAEVENT hEvent
ParamCount=1
Header=sockets.h.api;common.h.api;
[WSASetLastError]
1=[WSA_ERROR] iError
ParamCount=1
Header=ws2_32.h.api;
[WSASetService]
1=LPWSAQUERYSET lpqsRegInfo
2=[WSAESETSERVICEOP] essOperation
3=DWORD dwControlFlags
ParamCount=3
Header=sockets.h.api;common.h.api;
[WSASocket]
1=[AddressFamily] af
2=[SocketType] type
3=[SocketProtocol] protocol
4=LPWSAPROTOCOL_INFO lpProtocolInfo
5=[GROUP] g
6=[WsaFlags] dwFlags
ParamCount=6
Header=ws2_32.h.api;sockets.h.api;
[WSAStartup]
1=WORD wVersionRequested
2=LPWSADATA lpWSAData
ParamCount=2
Header=sockets.h.api;common.h.api;
[WSAStringToAddress]
1=LPTSTR AddressString
2=[AddressFamily] AddressFamily
3=LPWSAPROTOCOL_INFO lpProtocolInfo
4=LPSOCKADDR lpAddress
5=LPINT lpAddressLength
ParamCount=5
Header=sockets.h.api;common.h.api;
[WSAWaitForMultipleEvents]
1=DWORD cEvents
2=WSAEVENT* lphEvents
3=BOOL fWaitAll
4=DWORD dwTimeout
5=BOOL fAlertable
ParamCount=5
Header=sockets.h.api;common.h.api;
[WSAIsBlocking]
ParamCount=0
[GetAddrInfoExCancel]
1=LPHANDLE lpHandle
ParamCount=1
Header=windows.h.api;
[GetAddrInfoExOverlappedResult]
1=LPOVERLAPPED lpOverlapped
ParamCount=1
Header=windows.h.api;
[WSAGetQOSByName]
1=[SOCKET] s
2=LPWSABUF lpQOSName
3=LPQOS lpQOS
ParamCount=3
Header=sockets.h.api;common.h.api;